{"version":3,"file":"choices.js","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap d5b509d68de5d63f1e05","webpack:///src/scripts/src/lib/utils.js","webpack:///src/scripts/src/constants.js","webpack:///./node_modules/lodash-es/_root.js","webpack:///./node_modules/lodash-es/_Symbol.js","webpack:///./node_modules/lodash-es/_getRawTag.js","webpack:///./node_modules/lodash-es/_objectToString.js","webpack:///./node_modules/lodash-es/_baseGetTag.js","webpack:///./node_modules/lodash-es/_overArg.js","webpack:///./node_modules/lodash-es/_getPrototype.js","webpack:///./node_modules/lodash-es/isObjectLike.js","webpack:///./node_modules/lodash-es/isPlainObject.js","webpack:///./node_modules/redux/es/createStore.js","webpack:///./node_modules/redux/es/utils/warning.js","webpack:///./node_modules/redux/es/combineReducers.js","webpack:///./node_modules/redux/es/bindActionCreators.js","webpack:///./node_modules/redux/es/compose.js","webpack:///./node_modules/redux/es/applyMiddleware.js","webpack:///./node_modules/redux/es/index.js","webpack:///(webpack)/buildin/global.js","webpack:///src/scripts/src/components/wrapped-element.js","webpack:///src/scripts/src/choices.js","webpack:///./node_modules/fuse.js/dist/fuse.js","webpack:///src/scripts/src/store/store.js","webpack:///./node_modules/lodash-es/_freeGlobal.js","webpack:///./node_modules/symbol-observable/index.js","webpack:///./node_modules/symbol-observable/lib/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/symbol-observable/lib/ponyfill.js","webpack:///src/scripts/src/reducers/index.js","webpack:///src/scripts/src/reducers/items.js","webpack:///src/scripts/src/reducers/groups.js","webpack:///src/scripts/src/reducers/choices.js","webpack:///src/scripts/src/components/dropdown.js","webpack:///src/scripts/src/components/container.js","webpack:///src/scripts/src/components/input.js","webpack:///src/scripts/src/components/list.js","webpack:///src/scripts/src/components/wrapped-input.js","webpack:///src/scripts/src/components/wrapped-select.js","webpack:///src/scripts/src/templates.js","webpack:///./node_modules/classnames/index.js","webpack:///src/scripts/src/actions/choices.js","webpack:///src/scripts/src/actions/items.js","webpack:///src/scripts/src/actions/groups.js","webpack:///src/scripts/src/actions/misc.js","webpack:///src/scripts/src/lib/polyfills.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n   //CommonJS2\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n   //AMD\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n   //CommonJS\n\telse if(typeof exports === 'object')\n\t\texports[\"Choices\"] = factory();\n   //Window\n\telse\n\t\troot[\"Choices\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/src/scripts/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d5b509d68de5d63f1e05","/* eslint-disable */\n\n/**\n * Capitalises the first letter of each word in a string\n * @param  {String} str String to capitalise\n * @return {String}     Capitalised string\n */\nexport const capitalise = function(str) {\n  return str.replace(/\\w\\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase());\n};\n\n/**\n * Generates a string of random chars\n * @param  {Number} length Length of the string to generate\n * @return {String} String of random chars\n */\nexport const generateChars = function(length) {\n  let chars = '';\n\n  for (let i = 0; i < length; i++) {\n    const randomChar = getRandomNumber(0, 36);\n    chars += randomChar.toString(36);\n  }\n\n  return chars;\n};\n\n/**\n * Generates a unique id based on an element\n * @param  {HTMLElement} element Element to generate the id from\n * @param  {String} Prefix for the Id\n * @return {String} Unique Id\n */\nexport const generateId = function(element, prefix) {\n  let id = element.id || (element.name && (`${element.name}-${generateChars(2)}`)) || generateChars(4);\n  id = id.replace(/(:|\\.|\\[|\\]|,)/g, '');\n  id = prefix + id;\n\n  return id;\n};\n\n\n/**\n * Tests the type of an object\n * @param  {String}  type Type to test object against\n * @param  {Object}  obj  Object to be tested\n * @return {Boolean}\n */\nexport const getType = function(obj) {\n  return Object.prototype.toString.call(obj).slice(8, -1);\n};\n\n/**\n * Tests the type of an object\n * @param  {String}  type Type to test object against\n * @param  {Object}  obj  Object to be tested\n * @return {Boolean}\n */\nexport const isType = function(type, obj) {\n  const clas = getType(obj);\n  return obj !== undefined && obj !== null && clas === type;\n};\n\n/**\n * Tests to see if a passed object is a node\n * @param  {Object}  obj  Object to be tested\n * @return {Boolean}\n */\nexport const isNode = o => (\n    typeof Node === 'object' ? o instanceof Node :\n    o && typeof o === 'object' && typeof o.nodeType === 'number' && typeof o.nodeName === 'string'\n  );\n\n/**\n * Tests to see if a passed object is an element\n * @param  {Object}  obj  Object to be tested\n * @return {Boolean}\n */\nexport const isElement = o => (\n    typeof HTMLElement === 'object' ? o instanceof HTMLElement : // DOM2\n    o && typeof o === 'object' && o !== null && o.nodeType === 1 && typeof o.nodeName === 'string'\n  );\n\n/**\n * Merges unspecified amount of objects into new object\n * @private\n * @return {Object} Merged object of arguments\n */\nexport const extend = function() {\n  const extended = {};\n  const length = arguments.length;\n\n  /**\n   * Merge one object into another\n   * @param  {Object} obj  Object to merge into extended object\n   */\n  const merge = function(obj) {\n    for (const prop in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n        // If deep merge and property is an object, merge properties\n         if (isType('Object', obj[prop])) {\n          extended[prop] = extend(true, extended[prop], obj[prop]);\n        } else {\n          extended[prop] = obj[prop];\n        }\n       }\n    }\n  };\n\n  // Loop through each passed argument\n  for (let i = 0; i < length; i++) {\n    // store argument at position i\n    const obj = arguments[i];\n\n    // If we are in fact dealing with an object, merge it.\n    if (isType('Object', obj)) {\n      merge(obj);\n    }\n  }\n\n  return extended;\n};\n\n/**\n * CSS transition end event listener\n * @return\n */\nexport const whichTransitionEvent = function() {\n  let t,\n    el = document.createElement('fakeelement');\n\n  const transitions = {\n    transition: 'transitionend',\n    OTransition: 'oTransitionEnd',\n    MozTransition: 'transitionend',\n    WebkitTransition: 'webkitTransitionEnd',\n  };\n\n  for (t in transitions) {\n    if (el.style[t] !== undefined) {\n      return transitions[t];\n    }\n  }\n};\n\n/**\n * CSS animation end event listener\n * @return\n */\nexport const whichAnimationEvent = function() {\n  let t,\n    el = document.createElement('fakeelement');\n\n  const animations = {\n    animation: 'animationend',\n    OAnimation: 'oAnimationEnd',\n    MozAnimation: 'animationend',\n    WebkitAnimation: 'webkitAnimationEnd',\n  };\n\n  for (t in animations) {\n    if (el.style[t] !== undefined) {\n      return animations[t];\n    }\n  }\n};\n\n/**\n *  Get the ancestors of each element in the current set of matched elements,\n *  up to but not including the element matched by the selector\n * @param  {NodeElement} elem     Element to begin search from\n * @param  {NodeElement} parent   Parent to find\n * @param  {String} selector Class to find\n * @return {Array}          Array of parent elements\n */\nexport const getParentsUntil = function(elem, parent, selector) {\n  const parents = [];\n  // Get matches\n  for (; elem && elem !== document; elem = elem.parentNode) {\n    // Check if parent has been reached\n    if (parent) {\n      const parentType = parent.charAt(0);\n\n      // If parent is a class\n      if (parentType === '.') {\n        if (elem.classList.contains(parent.substr(1))) {\n          break;\n        }\n      }\n\n      // If parent is an ID\n      if (parentType === '#') {\n        if (elem.id === parent.substr(1)) {\n          break;\n        }\n      }\n\n      // If parent is a data attribute\n      if (parentType === '[') {\n        if (elem.hasAttribute(parent.substr(1, parent.length - 1))) {\n          break;\n        }\n      }\n\n      // If parent is a tag\n      if (elem.tagName.toLowerCase() === parent) {\n        break;\n      }\n    }\n    if (selector) {\n      const selectorType = selector.charAt(0);\n\n      // If selector is a class\n      if (selectorType === '.') {\n        if (elem.classList.contains(selector.substr(1))) {\n          parents.push(elem);\n        }\n      }\n\n      // If selector is an ID\n      if (selectorType === '#') {\n        if (elem.id === selector.substr(1)) {\n          parents.push(elem);\n        }\n      }\n\n      // If selector is a data attribute\n      if (selectorType === '[') {\n        if (elem.hasAttribute(selector.substr(1, selector.length - 1))) {\n          parents.push(elem);\n        }\n      }\n\n      // If selector is a tag\n      if (elem.tagName.toLowerCase() === selector) {\n        parents.push(elem);\n      }\n    } else {\n      parents.push(elem);\n    }\n  }\n\n  // Return parents if any exist\n  if (parents.length === 0) {\n    return null;\n  }\n  return parents;\n};\n\nexport const wrap = function(element, wrapper) {\n  wrapper = wrapper || document.createElement('div');\n  if (element.nextSibling) {\n    element.parentNode.insertBefore(wrapper, element.nextSibling);\n  } else {\n    element.parentNode.appendChild(wrapper);\n  }\n  return wrapper.appendChild(element);\n};\n\nexport const getSiblings = function(elem) {\n  const siblings = [];\n  let sibling = elem.parentNode.firstChild;\n  for (; sibling; sibling = sibling.nextSibling) {\n    if (sibling.nodeType === 1 && sibling !== elem) {\n      siblings.push(sibling);\n    }\n  }\n  return siblings;\n};\n\n/**\n * Find ancestor in DOM tree\n * @param  {NodeElement} el  Element to start search from\n * @param  {[type]} cls Class of parent\n * @return {NodeElement}     Found parent element\n */\nexport const findAncestor = function(el, cls) {\n  while ((el = el.parentElement) && !el.classList.contains(cls));\n  return el;\n};\n\n/**\n * Find ancestor in DOM tree by attribute name\n * @param  {NodeElement} el  Element to start search from\n * @param  {string} attr Attribute name of parent\n * @return {?NodeElement}     Found parent element or null\n */\nexport const findAncestorByAttrName = function(el, attr) {\n  let target = el;\n\n  while (target) {\n    if (target.hasAttribute(attr)) {\n      return target;\n    }\n\n    target = target.parentElement;\n  }\n\n  return null;\n};\n\n/**\n * Debounce an event handler.\n * @param  {Function} func      Function to run after wait\n * @param  {Number} wait      The delay before the function is executed\n * @param  {Boolean} immediate  If  passed, trigger the function on the leading edge, instead of the trailing.\n * @return {Function}           A function will be called after it stops being called for a given delay\n */\nexport const debounce = function(func, wait, immediate) {\n  let timeout;\n  return function() {\n    let context = this,\n      args = arguments;\n    const later = function() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\n/**\n * Get an element's distance from the top of the page\n * @private\n * @param  {NodeElement} el Element to test for\n * @return {Number} Elements Distance from top of page\n */\nexport const getElemDistance = function(el) {\n  let location = 0;\n  if (el.offsetParent) {\n    do {\n      location += el.offsetTop;\n      el = el.offsetParent;\n    } while (el);\n  }\n  return location >= 0 ? location : 0;\n};\n\n/**\n * Determine element height multiplied by any offsets\n * @private\n * @param  {HTMLElement} el Element to test for\n * @return {Number}    Height of element\n */\nexport const getElementOffset = function(el, offset) {\n  let elOffset = offset;\n  if (elOffset > 1) elOffset = 1;\n  if (elOffset > 0) elOffset = 0;\n\n  return Math.max(el.offsetHeight * elOffset);\n};\n\n/**\n * Get the next or previous element from a given start point\n * @param  {HTMLElement} startEl    Element to start position from\n * @param  {String}      className  The class we will look through\n * @param  {Number}      direction  Positive next element, negative previous element\n * @return {[HTMLElement}           Found element\n */\nexport const getAdjacentEl = (startEl, className, direction = 1) => {\n  if (!startEl || !className) return;\n\n  const parent = startEl.parentNode.parentNode;\n  const children = Array.from(parent.querySelectorAll(className));\n\n  const startPos = children.indexOf(startEl);\n  const operatorDirection = direction > 0 ? 1 : -1;\n\n  return children[startPos + operatorDirection];\n};\n\n/**\n * Get scroll position based on top/bottom position\n * @private\n * @return {String} Position of scroll\n */\nexport const getScrollPosition = function(position) {\n  if (position === 'bottom') {\n    // Scroll position from the bottom of the viewport\n    return Math.max((window.scrollY || window.pageYOffset) + (window.innerHeight || document.documentElement.clientHeight));\n  }\n    // Scroll position from the top of the viewport\n  return (window.scrollY || window.pageYOffset);\n};\n\n/**\n * Determine whether an element is within the viewport\n * @param  {HTMLElement}  el Element to test\n * @return {String} Position of scroll\n * @return {Boolean}\n */\nexport const isInView = function(el, position, offset) {\n  // If the user has scrolled further than the distance from the element to the top of its parent\n  return this.getScrollPosition(position) > (this.getElemDistance(el) + this.getElementOffset(el, offset));\n};\n\n/**\n * Determine whether an element is within\n * @param  {HTMLElement} el        Element to test\n * @param  {HTMLElement} parent    Scrolling parent\n * @param  {Number} direction      Whether element is visible from above or below\n * @return {Boolean}\n */\nexport const isScrolledIntoView = (el, parent, direction = 1) => {\n  if (!el) return;\n\n  let isVisible;\n\n  if (direction > 0) {\n    // In view from bottom\n    isVisible = (parent.scrollTop + parent.offsetHeight) >= (el.offsetTop + el.offsetHeight);\n  } else {\n    // In view from top\n    isVisible = el.offsetTop >= parent.scrollTop;\n  }\n\n  return isVisible;\n};\n\n/**\n * Remove html tags from a string\n * @param  {String}  Initial string/html\n * @return {String}  Sanitised string\n */\nexport const stripHTML = function(html) {\n  const el = document.createElement('DIV');\n  el.innerHTML = html;\n  return el.textContent || el.innerText || '';\n};\n\n/**\n * Adds animation to an element and removes it upon animation completion\n * @param  {Element} el        Element to add animation to\n * @param  {String} animation Animation class to add to element\n * @return\n */\nexport const addAnimation = (el, animation) => {\n  const animationEvent = whichAnimationEvent();\n\n  const removeAnimation = () => {\n    el.classList.remove(animation);\n    el.removeEventListener(animationEvent, removeAnimation, false);\n  };\n\n  el.classList.add(animation);\n  el.addEventListener(animationEvent, removeAnimation, false);\n};\n\n\n/**\n * Get a random number between a range\n * @param  {Number} min Minimum range\n * @param  {Number} max Maximum range\n * @return {Number}     Random number\n */\nexport const getRandomNumber = function(min, max) {\n  return Math.floor(Math.random() * (max - min) + min);\n};\n\n/**\n * Turn a string into a node\n * @param  {String} String to convert\n * @return {HTMLElement}   Converted node element\n */\nexport const strToEl = (function() {\n  const tmpEl = document.createElement('div');\n  return function(str) {\n    const cleanedInput = str.trim();\n    let r;\n    tmpEl.innerHTML = cleanedInput;\n    r = tmpEl.children[0];\n\n    while (tmpEl.firstChild) {\n      tmpEl.removeChild(tmpEl.firstChild);\n    }\n\n    return r;\n  };\n}());\n\n/**\n * Sets the width of a passed input based on its value\n * @return {Number} Width of input\n */\nexport const getWidthOfInput = (input) => {\n  const value = input.value || input.placeholder;\n  let width = input.offsetWidth;\n\n  if (value) {\n    const testEl = strToEl(`<span>${value}</span>`);\n    testEl.style.position = 'absolute';\n    testEl.style.padding = '0';\n    testEl.style.top = '-9999px';\n    testEl.style.left = '-9999px';\n    testEl.style.width = 'auto';\n    testEl.style.whiteSpace = 'pre';\n\n    if (document.body.contains(input) && window.getComputedStyle) {\n      const inputStyle = window.getComputedStyle(input);\n\n      if (inputStyle) {\n        testEl.style.fontSize = inputStyle.fontSize;\n        testEl.style.fontFamily = inputStyle.fontFamily;\n        testEl.style.fontWeight = inputStyle.fontWeight;\n        testEl.style.fontStyle = inputStyle.fontStyle;\n        testEl.style.letterSpacing = inputStyle.letterSpacing;\n        testEl.style.textTransform = inputStyle.textTransform;\n        testEl.style.padding = inputStyle.padding;\n      }\n    }\n\n    document.body.appendChild(testEl);\n\n    if (value && testEl.offsetWidth !== input.offsetWidth) {\n      width = testEl.offsetWidth + 4;\n    }\n\n    document.body.removeChild(testEl);\n  }\n\n  return `${width}px`;\n};\n\n/**\n * Sorting function for current and previous string\n * @param  {String} a Current value\n * @param  {String} b Next value\n * @return {Number}   -1 for after previous,\n *                    1 for before,\n *                    0 for same location\n */\nexport const sortByAlpha = (a, b) => {\n  const labelA = (a.label || a.value).toLowerCase();\n  const labelB = (b.label || b.value).toLowerCase();\n\n  if (labelA < labelB) return -1;\n  if (labelA > labelB) return 1;\n  return 0;\n};\n\n/**\n * Sort by numeric score\n * @param  {Object} a Current value\n * @param  {Object} b Next value\n * @return {Number}   -1 for after previous,\n *                    1 for before,\n *                    0 for same location\n */\nexport const sortByScore = (a, b) => a.score - b.score;\n\n/**\n * Dispatch native event\n * @param  {NodeElement} element Element to trigger event on\n * @param  {String} type         Type of event to trigger\n * @param  {Object} customArgs   Data to pass with event\n * @return {Object}              Triggered event\n */\nexport const dispatchEvent = (element, type, customArgs = null) => {\n  const event = new CustomEvent(type, {\n    detail: customArgs,\n    bubbles: true,\n    cancelable: true,\n  });\n\n  return element.dispatchEvent(event);\n};\n\n/**\n * Tests value against a regular expression\n * @param  {string} value   Value to test\n * @return {Boolean}        Whether test passed/failed\n * @private\n */\nexport const regexFilter = (value, regex) => {\n  if (!value || !regex) {\n    return false;\n  }\n\n  const expression = new RegExp(regex.source, 'i');\n  return expression.test(value);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/scripts/src/lib/utils.js","\nexport const DEFAULT_CLASSNAMES = {\n  containerOuter: 'choices',\n  containerInner: 'choices__inner',\n  input: 'choices__input',\n  inputCloned: 'choices__input--cloned',\n  list: 'choices__list',\n  listItems: 'choices__list--multiple',\n  listSingle: 'choices__list--single',\n  listDropdown: 'choices__list--dropdown',\n  item: 'choices__item',\n  itemSelectable: 'choices__item--selectable',\n  itemDisabled: 'choices__item--disabled',\n  itemChoice: 'choices__item--choice',\n  placeholder: 'choices__placeholder',\n  group: 'choices__group',\n  groupHeading: 'choices__heading',\n  button: 'choices__button',\n  activeState: 'is-active',\n  focusState: 'is-focused',\n  openState: 'is-open',\n  disabledState: 'is-disabled',\n  highlightedState: 'is-highlighted',\n  hiddenState: 'is-hidden',\n  flippedState: 'is-flipped',\n  loadingState: 'is-loading',\n  noResults: 'has-no-results',\n  noChoices: 'has-no-choices',\n};\n\nexport const DEFAULT_CONFIG = {\n  silent: false,\n  renderChoiceLimit: -1,\n  maxItemCount: -1,\n  addItems: true,\n  removeItems: true,\n  removeItemButton: false,\n  editItems: false,\n  duplicateItems: true,\n  delimiter: ',',\n  paste: true,\n  searchEnabled: true,\n  searchChoices: true,\n  searchFloor: 1,\n  searchResultLimit: 4,\n  searchFields: ['label', 'value'],\n  position: 'auto',\n  resetScrollPosition: true,\n  regexFilter: null,\n  shouldSort: true,\n  shouldSortItems: false,\n  placeholder: true,\n  placeholderValue: null,\n  searchPlaceholderValue: null,\n  prependValue: null,\n  appendValue: null,\n  renderSelectedChoices: 'auto',\n  loadingText: 'Loading...',\n  noResultsText: 'No results found',\n  noChoicesText: 'No choices to choose from',\n  itemSelectText: 'Press to select',\n  addItemText: value => `Press Enter to add <b>\"${value}\"</b>`,\n  maxItemText: maxItemCount => `Only ${maxItemCount} values can be added.`,\n  uniqueItemText: 'Only unique values can be added.',\n  fuseOptions: {\n    includeScore: true,\n  },\n  callbackOnInit: null,\n  callbackOnCreateTemplates: null,\n};\n\nexport const EVENTS = {\n  showDropdown: 'showDropdown',\n  hideDropdown: 'hideDropdown',\n  change: 'change',\n  choice: 'choice',\n  search: 'search',\n  addItem: 'addItem',\n  removeItem: 'removeItem',\n  highlightItem: 'highlightItem',\n};\n\nexport const ACTION_TYPES = {\n  ADD_CHOICE: 'ADD_CHOICE',\n  FILTER_CHOICES: 'FILTER_CHOICES',\n  ACTIVATE_CHOICES: 'ACTIVATE_CHOICES',\n  CLEAR_CHOICES: 'CLEAR_CHOICES',\n  ADD_GROUP: 'ADD_GROUP',\n  ADD_ITEM: 'ADD_ITEM',\n  REMOVE_ITEM: 'REMOVE_ITEM',\n  HIGHLIGHT_ITEM: 'HIGHLIGHT_ITEM',\n  CLEAR_ALL: 'CLEAR_ALL',\n};\n\nexport const KEY_CODES = {\n  BACK_KEY: 46,\n  DELETE_KEY: 8,\n  ENTER_KEY: 13,\n  A_KEY: 65,\n  ESC_KEY: 27,\n  UP_KEY: 38,\n  DOWN_KEY: 40,\n  PAGE_UP_KEY: 33,\n  PAGE_DOWN_KEY: 34,\n};\n\nexport const SCROLLING_SPEED = 4;\n\n\n\n// WEBPACK FOOTER //\n// src/scripts/src/constants.js","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash-es/_root.js\n// module id = null\n// module chunks = ","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash-es/_Symbol.js\n// module id = null\n// module chunks = ","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash-es/_getRawTag.js\n// module id = null\n// module chunks = ","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash-es/_objectToString.js\n// module id = null\n// module chunks = ","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash-es/_baseGetTag.js\n// module id = null\n// module chunks = ","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash-es/_overArg.js\n// module id = null\n// module chunks = ","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash-es/_getPrototype.js\n// module id = null\n// module chunks = ","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash-es/isObjectLike.js\n// module id = null\n// module chunks = ","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash-es/isPlainObject.js\n// module id = null\n// module chunks = ","import isPlainObject from 'lodash-es/isPlainObject';\nimport $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nexport var ActionTypes = {\n  INIT: '@@redux/INIT'\n\n  /**\n   * Creates a Redux store that holds the state tree.\n   * The only way to change the data in the store is to call `dispatch()` on it.\n   *\n   * There should only be a single store in your app. To specify how different\n   * parts of the state tree respond to actions, you may combine several reducers\n   * into a single reducer function by using `combineReducers`.\n   *\n   * @param {Function} reducer A function that returns the next state tree, given\n   * the current state tree and the action to handle.\n   *\n   * @param {any} [preloadedState] The initial state. You may optionally specify it\n   * to hydrate the state from the server in universal apps, or to restore a\n   * previously serialized user session.\n   * If you use `combineReducers` to produce the root reducer function, this must be\n   * an object with the same shape as `combineReducers` keys.\n   *\n   * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n   * to enhance the store with third-party capabilities such as middleware,\n   * time travel, persistence, etc. The only store enhancer that ships with Redux\n   * is `applyMiddleware()`.\n   *\n   * @returns {Store} A Redux store that lets you read the state, dispatch actions\n   * and subscribe to changes.\n   */\n};export default function createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/redux/es/createStore.js\n// module id = null\n// module chunks = ","/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nexport default function warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/redux/es/utils/warning.js\n// module id = null\n// module chunks = ","import { ActionTypes } from './createStore';\nimport isPlainObject from 'lodash-es/isPlainObject';\nimport warning from './utils/warning';\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n  return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nexport default function combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning('No reducer provided for key \"' + key + '\"');\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var unexpectedKeyCache = void 0;\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError = void 0;\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments[1];\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/redux/es/combineReducers.js\n// module id = null\n// module chunks = ","function bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(undefined, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nexport default function bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/redux/es/bindActionCreators.js\n// module id = null\n// module chunks = ","/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nexport default function compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(undefined, arguments));\n    };\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/redux/es/compose.js\n// module id = null\n// module chunks = ","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport compose from './compose';\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nexport default function applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, preloadedState, enhancer) {\n      var store = createStore(reducer, preloadedState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/redux/es/applyMiddleware.js\n// module id = null\n// module chunks = ","import createStore from './createStore';\nimport combineReducers from './combineReducers';\nimport bindActionCreators from './bindActionCreators';\nimport applyMiddleware from './applyMiddleware';\nimport compose from './compose';\nimport warning from './utils/warning';\n\n/*\n* This is a dummy function to check if the function name has been altered by minification.\n* If the function has been minified and NODE_ENV !== 'production', warn the user.\n*/\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { createStore, combineReducers, bindActionCreators, applyMiddleware, compose };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/redux/es/index.js\n// module id = null\n// module chunks = ","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 3\n// module chunks = 0","import { dispatchEvent } from '../lib/utils';\n\nexport default class WrappedElement {\n  constructor(instance, element, classNames) {\n    this.parentInstance = instance;\n    this.element = element;\n    this.classNames = classNames;\n    this.isDisabled = false;\n  }\n\n  getElement() {\n    return this.element;\n  }\n\n  getValue() {\n    return this.element.value;\n  }\n\n  conceal() {\n    // Hide passed input\n    this.element.classList.add(\n      this.classNames.input,\n      this.classNames.hiddenState,\n    );\n\n    // Remove element from tab index\n    this.element.tabIndex = '-1';\n\n    // Backup original styles if any\n    const origStyle = this.element.getAttribute('style');\n\n    if (origStyle) {\n      this.element.setAttribute('data-choice-orig-style', origStyle);\n    }\n\n    this.element.setAttribute('style', 'display:none;');\n    this.element.setAttribute('aria-hidden', 'true');\n    this.element.setAttribute('data-choice', 'active');\n  }\n\n  reveal() {\n    // Reinstate passed element\n    this.element.classList.remove(\n      this.classNames.input,\n      this.classNames.hiddenState,\n    );\n    this.element.removeAttribute('tabindex');\n\n    // Recover original styles if any\n    const origStyle = this.element.getAttribute('data-choice-orig-style');\n\n    if (origStyle) {\n      this.element.removeAttribute('data-choice-orig-style');\n      this.element.setAttribute('style', origStyle);\n    } else {\n      this.element.removeAttribute('style');\n    }\n    this.element.removeAttribute('aria-hidden');\n    this.element.removeAttribute('data-choice');\n\n    // Re-assign values - this is weird, I know\n    this.element.value = this.element.value;\n  }\n\n  enable() {\n    this.element.removeAttribute('disabled');\n    this.element.disabled = false;\n    this.isDisabled = false;\n  }\n\n  disable() {\n    this.element.setAttribute('disabled', '');\n    this.element.disabled = true;\n    this.isDisabled = true;\n  }\n\n  triggerEvent(eventType, data) {\n    dispatchEvent(this.element, eventType, data);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/scripts/src/components/wrapped-element.js","import Fuse from 'fuse.js';\nimport Store from './store/store';\nimport Dropdown from './components/dropdown';\nimport Container from './components/container';\nimport Input from './components/input';\nimport List from './components/list';\nimport WrappedInput from './components/wrapped-input';\nimport WrappedSelect from './components/wrapped-select';\nimport { DEFAULT_CONFIG, DEFAULT_CLASSNAMES, EVENTS, KEY_CODES, SCROLLING_SPEED } from './constants';\nimport { TEMPLATES } from './templates';\nimport { addChoice, filterChoices, activateChoices, clearChoices } from './actions/choices';\nimport { addItem, removeItem, highlightItem } from './actions/items';\nimport { addGroup } from './actions/groups';\nimport { clearAll } from './actions/misc';\nimport {\n  isScrolledIntoView,\n  getAdjacentEl,\n  wrap,\n  getType,\n  isType,\n  isElement,\n  strToEl,\n  extend,\n  sortByAlpha,\n  sortByScore,\n  generateId,\n  findAncestorByAttrName,\n  regexFilter,\n} from './lib/utils';\nimport './lib/polyfills';\n\n/**\n * Choices\n */\nclass Choices {\n  constructor(element = '[data-choice]', userConfig = {}) {\n    // If there are multiple elements, create a new instance\n    // for each element besides the first one (as that already has an instance)\n    if (isType('String', element)) {\n      const elements = document.querySelectorAll(element);\n      if (elements.length > 1) {\n        for (let i = 1; i < elements.length; i += 1) {\n          const el = elements[i];\n          /* eslint-disable no-new */\n          new Choices(el, userConfig);\n        }\n      }\n    }\n\n    const defaultConfig = {\n      ...DEFAULT_CONFIG,\n      items: [],\n      choices: [],\n      classNames: DEFAULT_CLASSNAMES,\n      sortFilter: sortByAlpha,\n    };\n\n    // Merge options with user options\n    this.config = extend(defaultConfig, Choices.userDefaults, userConfig);\n\n    if (!['auto', 'always'].includes(this.config.renderSelectedChoices)) {\n      this.config.renderSelectedChoices = 'auto';\n    }\n\n    // Create data store\n    this.store = new Store(this.render);\n\n    // State tracking\n    this.initialised = false;\n    this.currentState = {};\n    this.prevState = {};\n    this.currentValue = '';\n    this.renderDebounce = null;\n\n    // Retrieve triggering element (i.e. element with 'data-choice' trigger)\n    const passedElement = isType('String', element) ? document.querySelector(element) : element;\n\n    this.isTextElement = passedElement.type === 'text';\n    this.isSelectOneElement = passedElement.type === 'select-one';\n    this.isSelectMultipleElement = passedElement.type === 'select-multiple';\n    this.isSelectElement = this.isSelectOneElement || this.isSelectMultipleElement;\n    this.isValidElementType = this.isTextElement || this.isSelectElement;\n\n    if (this.isTextElement) {\n      this.passedElement = new WrappedInput(this, passedElement, this.config.classNames);\n    } else if (this.isSelectElement) {\n      this.passedElement = new WrappedSelect(this, passedElement, this.config.classNames);\n    }\n\n    if (!this.passedElement) {\n      if (!this.config.silent) {\n        console.error('Passed element not found');\n      }\n      return false;\n    }\n\n    this.isIe11 = !!(navigator.userAgent.match(/Trident/) && navigator.userAgent.match(/rv[ :]11/));\n    this.isScrollingOnIe = false;\n\n    if (this.config.shouldSortItems === true && this.isSelectOneElement) {\n      if (!this.config.silent) {\n        console.warn(\n          'shouldSortElements: Type of passed element is \\'select-one\\', falling back to false.',\n        );\n      }\n    }\n\n    this.highlightPosition = 0;\n    this.canSearch = this.config.searchEnabled;\n\n    this.placeholder = false;\n    if (!this.isSelectOneElement) {\n      this.placeholder = this.config.placeholder ?\n        (this.config.placeholderValue || this.passedElement.element.getAttribute('placeholder')) :\n        false;\n    }\n\n    // Assign preset choices from passed object\n    this.presetChoices = this.config.choices;\n    // Assign preset items from passed object first\n    this.presetItems = this.config.items;\n\n    // Then add any values passed from attribute\n    if (this.passedElement.getValue()) {\n      this.presetItems = this.presetItems.concat(\n        this.passedElement.getValue().split(this.config.delimiter),\n      );\n    }\n\n    // Set unique base Id\n    this.baseId = generateId(this.passedElement.element, 'choices-');\n\n    this.idNames = {\n      itemChoice: 'item-choice',\n    };\n\n    // Bind methods\n    this.render = this.render.bind(this);\n\n    // Bind event handlers\n    this._onFocus = this._onFocus.bind(this);\n    this._onBlur = this._onBlur.bind(this);\n    this._onKeyUp = this._onKeyUp.bind(this);\n    this._onKeyDown = this._onKeyDown.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this._onTouchMove = this._onTouchMove.bind(this);\n    this._onTouchEnd = this._onTouchEnd.bind(this);\n    this._onMouseDown = this._onMouseDown.bind(this);\n    this._onMouseOver = this._onMouseOver.bind(this);\n\n    // Monitor touch taps/scrolls\n    this.wasTap = true;\n\n    // Cutting the mustard\n    const cuttingTheMustard = 'classList' in document.documentElement;\n    if (!cuttingTheMustard && !this.config.silent) {\n      console.error('Choices: Your browser doesn\\'t support Choices');\n    }\n\n    const canInit = isElement(this.passedElement.element) && this.isValidElementType;\n\n    if (canInit) {\n      // If element has already been initialised with Choices\n      if (this.passedElement.element.getAttribute('data-choice') === 'active') {\n        return false;\n      }\n\n      // Let's go\n      this.init();\n    } else if (!this.config.silent) {\n      console.error('Incompatible input passed');\n    }\n  }\n\n  /* ========================================\n  =            Public functions            =\n  ======================================== */\n\n  /**\n   * Initialise Choices\n   * @return\n   * @public\n   */\n  init() {\n    if (this.initialised) {\n      return;\n    }\n\n    // Set initialise flag\n    this.initialised = true;\n    // Create required elements\n    this._createTemplates();\n    // Generate input markup\n    this._createStructure();\n    // Subscribe store to render method\n    this.store.subscribe(this.render);\n    // Render any items\n    this.render();\n    // Trigger event listeners\n    this._addEventListeners();\n\n    const callback = this.config.callbackOnInit;\n    // Run callback if it is a function\n    if (callback && isType('Function', callback)) {\n      callback.call(this);\n    }\n  }\n\n  /**\n   * Destroy Choices and nullify values\n   * @return\n   * @public\n   */\n  destroy() {\n    if (!this.initialised) {\n      return;\n    }\n\n    // Remove all event listeners\n    this._removeEventListeners();\n    this.passedElement.reveal();\n    this.containerOuter.revert(this.passedElement.element);\n\n    // Clear data store\n    this.clearStore();\n\n    // Nullify instance-specific data\n    this.config.templates = null;\n\n    // Uninitialise\n    this.initialised = false;\n  }\n\n  /**\n * Enable interaction with Choices\n * @return {Object} Class instance\n */\n  enable() {\n    if (!this.initialised) {\n      return this;\n    }\n\n    this.passedElement.enable();\n\n    if (this.containerOuter.isDisabled) {\n      this._addEventListeners();\n      this.input.enable();\n      this.containerOuter.enable();\n    }\n\n    return this;\n  }\n\n  /**\n   * Disable interaction with Choices\n   * @return {Object} Class instance\n   * @public\n   */\n  disable() {\n    if (!this.initialised) {\n      return this;\n    }\n\n    this.passedElement.disable();\n\n    if (!this.containerOuter.isDisabled) {\n      this._removeEventListeners();\n      this.input.disable();\n      this.containerOuter.disable();\n    }\n\n    return this;\n  }\n\n  /**\n   * Render group choices into a DOM fragment and append to choice list\n   * @param  {Array} groups    Groups to add to list\n   * @param  {Array} choices   Choices to add to groups\n   * @param  {DocumentFragment} fragment Fragment to add groups and options to (optional)\n   * @return {DocumentFragment} Populated options fragment\n   * @private\n   */\n  renderGroups(groups, choices, fragment) {\n    const groupFragment = fragment || document.createDocumentFragment();\n    const filter = this.config.sortFilter;\n    const getGroupChoices = group => choices.filter((choice) => {\n      if (this.isSelectOneElement) {\n        return choice.groupId === group.id;\n      }\n      return choice.groupId === group.id && (this.config.renderSelectedChoices === 'always' || !choice.selected);\n    });\n\n    // If sorting is enabled, filter groups\n    if (this.config.shouldSort) {\n      groups.sort(filter);\n    }\n\n    groups.forEach((group) => {\n      const groupChoices = getGroupChoices(group);\n\n      if (groupChoices.length >= 1) {\n        const dropdownGroup = this._getTemplate('choiceGroup', group);\n        groupFragment.appendChild(dropdownGroup);\n        this.renderChoices(groupChoices, groupFragment, true);\n      }\n    });\n\n    return groupFragment;\n  }\n\n  /**\n   * Render choices into a DOM fragment and append to choice list\n   * @param  {Array} choices    Choices to add to list\n   * @param  {DocumentFragment} fragment Fragment to add choices to (optional)\n   * @return {DocumentFragment} Populated choices fragment\n   * @private\n   */\n  renderChoices(choices, fragment, withinGroup = false) {\n    // Create a fragment to store our list items (so we don't have to update the DOM for each item)\n    const choicesFragment = fragment || document.createDocumentFragment();\n    const { renderSelectedChoices, searchResultLimit, renderChoiceLimit } = this.config;\n    const filter = this.isSearching ? sortByScore : this.config.sortFilter;\n    const appendChoice = (choice) => {\n      const shouldRender = renderSelectedChoices === 'auto' ?\n        (this.isSelectOneElement || !choice.selected) :\n        true;\n      if (shouldRender) {\n        const dropdownItem = this._getTemplate('choice', choice, this.config.itemSelectText);\n        choicesFragment.appendChild(dropdownItem);\n      }\n    };\n\n    let rendererableChoices = choices;\n\n    if (renderSelectedChoices === 'auto' && !this.isSelectOneElement) {\n      rendererableChoices = choices.filter(choice => !choice.selected);\n    }\n\n    // Split array into placeholders and \"normal\" choices\n    const { placeholderChoices, normalChoices } = rendererableChoices.reduce((acc, choice) => {\n      if (choice.placeholder) {\n        acc.placeholderChoices.push(choice);\n      } else {\n        acc.normalChoices.push(choice);\n      }\n      return acc;\n    }, { placeholderChoices: [], normalChoices: [] });\n\n    // If sorting is enabled or the user is searching, filter choices\n    if (this.config.shouldSort || this.isSearching) {\n      normalChoices.sort(filter);\n    }\n\n    let choiceLimit = rendererableChoices.length;\n\n    // Prepend placeholeder\n    const sortedChoices = [...placeholderChoices, ...normalChoices];\n\n    if (this.isSearching) {\n      choiceLimit = searchResultLimit;\n    } else if (renderChoiceLimit > 0 && !withinGroup) {\n      choiceLimit = renderChoiceLimit;\n    }\n\n    // Add each choice to dropdown within range\n    for (let i = 0; i < choiceLimit; i += 1) {\n      if (sortedChoices[i]) {\n        appendChoice(sortedChoices[i]);\n      }\n    }\n\n    return choicesFragment;\n  }\n\n  /**\n   * Render items into a DOM fragment and append to items list\n   * @param  {Array} items    Items to add to list\n   * @param  {DocumentFragment} [fragment] Fragment to add items to (optional)\n   * @return\n   * @private\n   */\n  renderItems(items, fragment = null) {\n    // Create fragment to add elements to\n    const itemListFragment = fragment || document.createDocumentFragment();\n\n    // If sorting is enabled, filter items\n    if (this.config.shouldSortItems && !this.isSelectOneElement) {\n      items.sort(this.config.sortFilter);\n    }\n\n    if (this.isTextElement) {\n      // Simplify store data to just values\n      const itemsFiltered = this.store.getItemsReducedToValues(items);\n      const itemsFilteredString = itemsFiltered.join(this.config.delimiter);\n\n      // Update the value of the hidden input\n      this.passedElement.setValue(itemsFilteredString);\n    } else {\n      const selectedOptionsFragment = document.createDocumentFragment();\n      const addOptionToFragment = (item) => {\n        // Create a standard select option\n        const option = this._getTemplate('option', item);\n        // Append it to fragment\n        selectedOptionsFragment.appendChild(option);\n      };\n\n      // Add each list item to list\n      items.forEach(item => addOptionToFragment(item));\n      // Update the options of the hidden input\n      this.passedElement.setOptions(selectedOptionsFragment);\n    }\n\n    const addItemToFragment = (item) => {\n      // Create new list element\n      const listItem = this._getTemplate('item', item, this.config.removeItemButton);\n      // Append it to list\n      itemListFragment.appendChild(listItem);\n    };\n\n    // Add each list item to list\n    items.forEach(item => addItemToFragment(item));\n\n    return itemListFragment;\n  }\n\n  /**\n   * Render DOM with values.\n   */\n  render() {\n    if (this.renderDebounce) {\n      clearTimeout(this.renderDebounce);\n    }\n\n    this.renderDebounce = setTimeout(() => this._render(), 100);\n  }\n\n  /**\n   * Render DOM with values\n   * @return\n   * @private\n   */\n  _render() {\n    this.currentState = this.store.getState();\n    const stateChanged = (\n      this.currentState.choices !== this.prevState.choices ||\n      this.currentState.groups !== this.prevState.groups ||\n      this.currentState.items !== this.prevState.items\n    );\n\n    if (!stateChanged) {\n      return;\n    }\n\n    /* Choices */\n\n    if (this.isSelectElement) {\n      // Get active groups/choices\n      const activeGroups = this.store.getGroupsFilteredByActive();\n      const activeChoices = this.store.getChoicesFilteredByActive();\n\n      let choiceListFragment = document.createDocumentFragment();\n\n      // Clear choices\n      this.choiceList.clear();\n\n      // Scroll back to top of choices list\n      if (this.config.resetScrollPosition) {\n        this.choiceList.scrollTo(0);\n      }\n\n      // If we have grouped options\n      if (activeGroups.length >= 1 && !this.isSearching) {\n        // If we have a placeholder choice along with groups\n        const activePlaceholders = activeChoices.filter(\n          activeChoice => activeChoice.placeholder === true && activeChoice.groupId === -1,\n        );\n        if (activePlaceholders.length >= 1) {\n          choiceListFragment = this.renderChoices(activePlaceholders, choiceListFragment);\n        }\n        choiceListFragment = this.renderGroups(activeGroups, activeChoices, choiceListFragment);\n      } else if (activeChoices.length >= 1) {\n        choiceListFragment = this.renderChoices(activeChoices, choiceListFragment);\n      }\n\n      // If we have choices to show\n      if (choiceListFragment.childNodes && choiceListFragment.childNodes.length > 0) {\n        const activeItems = this.store.getItemsFilteredByActive();\n        const canAddItem = this._canAddItem(activeItems, this.input.getValue());\n\n        // ...and we can select them\n        if (canAddItem.response) {\n          // ...append them and highlight the first choice\n          this.choiceList.append(choiceListFragment);\n          this._highlightChoice();\n        } else {\n          // ...otherwise show a notice\n          this.choiceList.append(this._getTemplate('notice', canAddItem.notice));\n        }\n      } else {\n        // Otherwise show a notice\n        let dropdownItem;\n        let notice;\n\n        if (this.isSearching) {\n          notice = isType('Function', this.config.noResultsText) ?\n              this.config.noResultsText() :\n              this.config.noResultsText;\n\n          dropdownItem = this._getTemplate('notice', notice, 'no-results');\n        } else {\n          notice = isType('Function', this.config.noChoicesText) ?\n              this.config.noChoicesText() :\n              this.config.noChoicesText;\n\n          dropdownItem = this._getTemplate('notice', notice, 'no-choices');\n        }\n\n        this.choiceList.append(dropdownItem);\n      }\n    }\n\n    /* Items */\n\n    // Get active items (items that can be selected)\n    const activeItems = this.store.getItemsFilteredByActive() || [];\n    if (activeItems.length) {\n      // Clear list\n      this.itemList.clear();\n      // Create a fragment to store our list items\n      // (so we don't have to update the DOM for each item)\n      const itemListFragment = this.renderItems(activeItems);\n\n      // If we have items to add, append them\n      if (itemListFragment.childNodes) {\n        this.itemList.append(itemListFragment);\n      }\n    }\n\n    this.prevState = this.currentState;\n  }\n\n  /**\n   * Select item (a selected item can be deleted)\n   * @param  {Element} item Element to select\n   * @param  {Boolean} [runEvent=true] Whether to trigger 'highlightItem' event\n   * @return {Object} Class instance\n   * @public\n   */\n  highlightItem(item, runEvent = true) {\n    if (!item) {\n      return this;\n    }\n\n    const { id, groupId = -1, value = '', label = '' } = item;\n    const group = groupId >= 0 ? this.store.getGroupById(groupId) : null;\n\n    this.store.dispatch(highlightItem(id, true));\n\n    if (runEvent) {\n      this.passedElement.triggerEvent(EVENTS.highlightItem, {\n        id,\n        value,\n        label,\n        groupValue: group && group.value ? group.value : null,\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Deselect item\n   * @param  {Element} item Element to de-select\n   * @return {Object} Class instance\n   * @public\n   */\n  unhighlightItem(item) {\n    if (!item) {\n      return this;\n    }\n\n    const { id, groupId = -1, value = '', label = '' } = item;\n    const group = groupId >= 0 ? this.store.getGroupById(groupId) : null;\n\n    this.store.dispatch(highlightItem(id, false));\n    this.passedElement.triggerEvent(EVENTS.highlightItem, {\n      id,\n      value,\n      label,\n      groupValue: group && group.value ? group.value : null,\n    });\n\n    return this;\n  }\n\n  /**\n   * Highlight items within store\n   * @return {Object} Class instance\n   * @public\n   */\n  highlightAll() {\n    const items = this.store.getItems();\n    items.forEach(item => this.highlightItem(item));\n    return this;\n  }\n\n  /**\n   * Deselect items within store\n   * @return {Object} Class instance\n   * @public\n   */\n  unhighlightAll() {\n    const items = this.store.getItems();\n    items.forEach(item => this.unhighlightItem(item));\n    return this;\n  }\n\n  /**\n   * Remove an item from the store by its value\n   * @param  {String} value Value to search for\n   * @return {Object} Class instance\n   * @public\n   */\n  removeActiveItemsByValue(value) {\n    if (!value) {\n      return this;\n    }\n\n    const items = this.store.getItemsFilteredByActive();\n\n    items.forEach((item) => {\n      if (item.value === value) {\n        this._removeItem(item);\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * Remove all items from store array\n   * @note Removed items are soft deleted\n   * @param  {Number} excludedId Optionally exclude item by ID\n   * @return {Object} Class instance\n   * @public\n   */\n  removeActiveItems(excludedId) {\n    const items = this.store.getItemsFilteredByActive();\n\n    items.forEach((item) => {\n      if (excludedId !== item.id) {\n        this._removeItem(item);\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * Remove all selected items from store\n   * @note Removed items are soft deleted\n   * @return {Object} Class instance\n   * @public\n   */\n  removeHighlightedItems(runEvent = false) {\n    const items = this.store.getItemsFilteredByHighlighted();\n\n    items.forEach((item) => {\n      this._removeItem(item);\n      // If this action was performed by the user\n      // trigger the event\n      if (runEvent) {\n        this._triggerChange(item.value);\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * Show dropdown to user by adding active state class\n   * @return {Object} Class instance\n   * @public\n   */\n  showDropdown(focusInput = false) {\n    if (this.dropdown.isActive) {\n      return this;\n    }\n\n    this.containerOuter.open(this.dropdown.getVerticalPos());\n    this.dropdown.show();\n    this.input.activate(focusInput);\n    this.passedElement.triggerEvent(EVENTS.showDropdown, {});\n\n    return this;\n  }\n\n  /**\n   * Hide dropdown from user\n   * @return {Object} Class instance\n   * @public\n   */\n  hideDropdown(blurInput = false) {\n    if (!this.dropdown.isActive) {\n      return this;\n    }\n\n    this.containerOuter.close();\n    this.dropdown.hide();\n    this.input.deactivate(blurInput);\n    this.passedElement.triggerEvent(EVENTS.hideDropdown, {});\n\n    return this;\n  }\n\n  /**\n   * Determine whether to hide or show dropdown based on its current state\n   * @return {Object} Class instance\n   * @public\n   */\n  toggleDropdown() {\n    if (this.dropdown.isActive) {\n      this.hideDropdown();\n    } else {\n      this.showDropdown(true);\n    }\n\n    return this;\n  }\n\n  /**\n   * Get value(s) of input (i.e. inputted items (text) or selected choices (select))\n   * @param {Boolean} valueOnly Get only values of selected items, otherwise return selected items\n   * @return {Array/String} selected value (select-one) or\n   *                        array of selected items (inputs & select-multiple)\n   * @public\n   */\n  getValue(valueOnly = false) {\n    const items = this.store.getItemsFilteredByActive();\n\n    const values = items.reduce((selectedItems, item) => {\n      const itemValue = valueOnly ? item.value : item;\n      selectedItems.push(itemValue);\n      return selectedItems;\n    }, []);\n\n    return this.isSelectOneElement ? values[0] : values;\n  }\n\n  /**\n   * Set value of input. If the input is a select box, a choice will\n   * be created and selected otherwise an item will created directly.\n   * @param  {Array}   args  Array of value objects or value strings\n   * @return {Object} Class instance\n   * @public\n   */\n  setValue(args) {\n    if (!this.initialised) {\n      return this;\n    }\n\n    // Convert args to an iterable array\n    const values = [...args];\n    values.forEach(value => this._setChoiceOrItem(value));\n\n    return this;\n  }\n\n  /**\n   * Select value of select box via the value of an existing choice\n   * @param {Array/String} value An array of strings of a single string\n   * @return {Object} Class instance\n   * @public\n   */\n  setChoiceByValue(value) {\n    if (this.isTextElement || !this.initialised) {\n      return this;\n    }\n\n    // If only one value has been passed, convert to array\n    const choiceValue = isType('Array', value) ? value : [value];\n\n    // Loop through each value and\n    choiceValue.forEach(val => this._findAndSelectChoiceByValue(val));\n\n    return this;\n  }\n\n  /**\n   * Direct populate choices\n   * @param  {Array} choices - Choices to insert\n   * @param  {String} value - Name of 'value' property\n   * @param  {String} label - Name of 'label' property\n   * @param  {Boolean} replaceChoices Whether existing choices should be removed\n   * @return {Object} Class instance\n   * @public\n   */\n  setChoices(choices = [], value = '', label = '', replaceChoices = false) {\n    if (\n      !this.isSelectElement ||\n      !choices.length ||\n      !value\n    ) {\n      return this;\n    }\n\n    // Clear choices if needed\n    if (replaceChoices) {\n      this._clearChoices();\n    }\n\n    this.containerOuter.removeLoadingState();\n    const addGroupsAndChoices = (groupOrChoice) => {\n      if (groupOrChoice.choices) {\n        this._addGroup(\n          groupOrChoice,\n          (groupOrChoice.id || null),\n          value,\n          label,\n        );\n      } else {\n        this._addChoice(\n          groupOrChoice[value],\n          groupOrChoice[label],\n          groupOrChoice.selected,\n          groupOrChoice.disabled,\n          undefined,\n          groupOrChoice.customProperties,\n          groupOrChoice.placeholder,\n        );\n      }\n    };\n\n    choices.forEach(addGroupsAndChoices);\n\n    return this;\n  }\n\n  /**\n   * Clear items,choices and groups\n   * @note Hard delete\n   * @return {Object} Class instance\n   * @public\n   */\n  clearStore() {\n    this.store.dispatch(clearAll());\n    return this;\n  }\n\n  /**\n   * Set value of input to blank\n   * @return {Object} Class instance\n   * @public\n   */\n  clearInput() {\n    const shouldSetInputWidth = !this.isSelectOneElement;\n    this.input.clear(shouldSetInputWidth);\n\n    if (!this.isTextElement && this.config.searchEnabled) {\n      this.isSearching = false;\n      this.store.dispatch(activateChoices(true));\n    }\n\n    return this;\n  }\n\n  /**\n   * Populate options via ajax callback\n   * @param  {Function} fn Function that actually makes an AJAX request\n   * @return {Object} Class instance\n   * @public\n   */\n  ajax(fn) {\n    if (!this.initialised || !this.isSelectElement || !fn) {\n      return this;\n    }\n\n    requestAnimationFrame(() => this._handleLoadingState(true));\n    fn(this._ajaxCallback());\n\n    return this;\n  }\n\n  /* =====  End of Public functions  ====== */\n\n  /* =============================================\n  =                Private functions            =\n  ============================================= */\n\n  /**\n   * Call change callback\n   * @param  {String} value - last added/deleted/selected value\n   * @return\n   * @private\n   */\n  _triggerChange(value) {\n    if (!value) {\n      return;\n    }\n\n    this.passedElement.triggerEvent(EVENTS.change, {\n      value,\n    });\n  }\n\n    /**\n   * Select placeholder choice\n   */\n  _selectPlaceholderChoice() {\n    const placeholderChoice = this.store.getPlaceholderChoice();\n\n    if (placeholderChoice) {\n      this._addItem(\n        placeholderChoice.value,\n        placeholderChoice.label,\n        placeholderChoice.id,\n        placeholderChoice.groupId,\n        null,\n        placeholderChoice.placeholder,\n      );\n      this._triggerChange(placeholderChoice.value);\n    }\n  }\n\n\n  /**\n   * Process enter/click of an item button\n   * @param {Array} activeItems The currently active items\n   * @param  {Element} element Button being interacted with\n   * @return\n   * @private\n   */\n  _handleButtonAction(activeItems, element) {\n    if (\n      !activeItems ||\n      !element ||\n      !this.config.removeItems ||\n      !this.config.removeItemButton\n    ) {\n      return;\n    }\n\n    const itemId = element.parentNode.getAttribute('data-id');\n    const itemToRemove = activeItems.find(item => item.id === parseInt(itemId, 10));\n\n   // Remove item associated with button\n    this._removeItem(itemToRemove);\n    this._triggerChange(itemToRemove.value);\n\n    if (this.isSelectOneElement) {\n      this._selectPlaceholderChoice();\n    }\n  }\n\n  /**\n   * Process click of an item\n   * @param {Array} activeItems The currently active items\n   * @param  {Element} element Item being interacted with\n   * @param  {Boolean} hasShiftKey Whether the user has the shift key active\n   * @return\n   * @private\n   */\n  _handleItemAction(activeItems, element, hasShiftKey = false) {\n    if (\n      !activeItems ||\n      !element ||\n      !this.config.removeItems ||\n      this.isSelectOneElement\n    ) {\n      return;\n    }\n\n    const passedId = element.getAttribute('data-id');\n\n    // We only want to select one item with a click\n    // so we deselect any items that aren't the target\n    // unless shift is being pressed\n    activeItems.forEach((item) => {\n      if (item.id === parseInt(passedId, 10) && !item.highlighted) {\n        this.highlightItem(item);\n      } else if (!hasShiftKey && item.highlighted) {\n        this.unhighlightItem(item);\n      }\n    });\n\n    // Focus input as without focus, a user cannot do anything with a\n    // highlighted item\n    this.input.focus();\n  }\n\n  /**\n   * Process click of a choice\n   * @param {Array} activeItems The currently active items\n   * @param  {Element} element Choice being interacted with\n   * @return\n   */\n  _handleChoiceAction(activeItems, element) {\n    if (!activeItems || !element) {\n      return;\n    }\n\n    // If we are clicking on an option\n    const id = element.getAttribute('data-id');\n    const choice = this.store.getChoiceById(id);\n    const passedKeyCode = activeItems[0] && activeItems[0].keyCode ? activeItems[0].keyCode : null;\n    const hasActiveDropdown = this.dropdown.isActive;\n\n    // Update choice keyCode\n    choice.keyCode = passedKeyCode;\n\n    this.passedElement.triggerEvent(EVENTS.choice, {\n      choice,\n    });\n\n    if (choice && !choice.selected && !choice.disabled) {\n      const canAddItem = this._canAddItem(activeItems, choice.value);\n\n      if (canAddItem.response) {\n        this._addItem(\n          choice.value,\n          choice.label,\n          choice.id,\n          choice.groupId,\n          choice.customProperties,\n          choice.placeholder,\n          choice.keyCode,\n        );\n        this._triggerChange(choice.value);\n      }\n    }\n\n    this.clearInput();\n\n    // We wont to close the dropdown if we are dealing with a single select box\n    if (hasActiveDropdown && this.isSelectOneElement) {\n      this.hideDropdown();\n      this.containerOuter.focus();\n    }\n  }\n\n  /**\n   * Process back space event\n   * @param  {Array} activeItems items\n   * @return\n   * @private\n   */\n  _handleBackspace(activeItems) {\n    if (!this.config.removeItems || !activeItems) {\n      return;\n    }\n\n    const lastItem = activeItems[activeItems.length - 1];\n    const hasHighlightedItems = activeItems.some(item => item.highlighted);\n\n    // If editing the last item is allowed and there are not other selected items,\n    // we can edit the item value. Otherwise if we can remove items, remove all selected items\n    if (this.config.editItems && !hasHighlightedItems && lastItem) {\n      this.input.setValue(lastItem.value);\n      this.input.setWidth();\n      this._removeItem(lastItem);\n      this._triggerChange(lastItem.value);\n    } else {\n      if (!hasHighlightedItems) {\n        // Highlight last item if none already highlighted\n        this.highlightItem(lastItem, false);\n      }\n      this.removeHighlightedItems(true);\n    }\n  }\n\n  /**\n   * Apply or remove a loading state to the component.\n   * @param {Boolean} isLoading default value set to 'true'.\n   * @return\n   * @private\n   */\n  _handleLoadingState(isLoading = true) {\n    let placeholderItem = this.itemList.getChild(`.${this.config.classNames.placeholder}`);\n    if (isLoading) {\n      this.containerOuter.addLoadingState();\n      if (this.isSelectOneElement) {\n        if (!placeholderItem) {\n          placeholderItem = this._getTemplate('placeholder', this.config.loadingText);\n          this.itemList.append(placeholderItem);\n        } else {\n          placeholderItem.innerHTML = this.config.loadingText;\n        }\n      } else {\n        this.input.setPlaceholder(this.config.loadingText);\n      }\n    } else {\n      this.containerOuter.removeLoadingState();\n\n      if (this.isSelectOneElement) {\n        placeholderItem.innerHTML = (this.placeholder || '');\n      } else {\n        this.input.setPlaceholder(this.placeholder || '');\n      }\n    }\n  }\n\n\n  /**\n   * Validates whether an item can be added by a user\n   * @param {Array} activeItems The currently active items\n   * @param  {String} value     Value of item to add\n   * @return {Object}           Response: Whether user can add item\n   *                            Notice: Notice show in dropdown\n   */\n  _canAddItem(activeItems, value) {\n    let canAddItem = true;\n    let notice = isType('Function', this.config.addItemText) ?\n      this.config.addItemText(value) :\n      this.config.addItemText;\n\n    if (this.isSelectMultipleElement || this.isTextElement) {\n      if (this.config.maxItemCount > 0 && this.config.maxItemCount <= activeItems.length) {\n        // If there is a max entry limit and we have reached that limit\n        // don't update\n        canAddItem = false;\n        notice = isType('Function', this.config.maxItemText) ?\n          this.config.maxItemText(this.config.maxItemCount) :\n          this.config.maxItemText;\n      }\n    }\n\n    if (this.config.regexFilter && this.isTextElement && this.config.addItems && canAddItem) {\n      // If a user has supplied a regular expression filter\n      // determine whether we can update based on whether\n      // our regular expression passes\n      canAddItem = regexFilter(value, this.config.regexFilter);\n    }\n\n    // If no duplicates are allowed, and the value already exists\n    // in the array\n    const isUnique = !activeItems.some((item) => {\n      if (isType('String', value)) {\n        return item.value === value.trim();\n      }\n\n      return item.value === value;\n    });\n\n    if (!isUnique &&\n      !this.config.duplicateItems &&\n      !this.isSelectOneElement &&\n      canAddItem\n    ) {\n      canAddItem = false;\n      notice = isType('Function', this.config.uniqueItemText) ?\n        this.config.uniqueItemText(value) :\n        this.config.uniqueItemText;\n    }\n\n    return {\n      response: canAddItem,\n      notice,\n    };\n  }\n\n  /**\n   * Retrieve the callback used to populate component's choices in an async way.\n   * @returns {Function} The callback as a function.\n   * @private\n   */\n  _ajaxCallback() {\n    return (results, value, label) => {\n      if (!results || !value) {\n        return;\n      }\n\n      const parsedResults = isType('Object', results) ? [results] : results;\n\n      if (parsedResults && isType('Array', parsedResults) && parsedResults.length) {\n        // Remove loading states/text\n        this._handleLoadingState(false);\n        // Add each result as a choice\n        parsedResults.forEach((result) => {\n          if (result.choices) {\n            const groupId = (result.id || null);\n            this._addGroup(\n              result,\n              groupId,\n              value,\n              label,\n            );\n          } else {\n            this._addChoice(\n              result[value],\n              result[label],\n              result.selected,\n              result.disabled,\n              undefined,\n              result.customProperties,\n              result.placeholder,\n            );\n          }\n        });\n\n        if (this.isSelectOneElement) {\n          this._selectPlaceholderChoice();\n        }\n      } else {\n        // No results, remove loading state\n        this._handleLoadingState(false);\n      }\n    };\n  }\n\n  /**\n   * Filter choices based on search value\n   * @param  {String} value Value to filter by\n   * @return\n   * @private\n   */\n  _searchChoices(value) {\n    const newValue = isType('String', value) ? value.trim() : value;\n    const currentValue = isType('String', this.currentValue) ?\n      this.currentValue.trim() :\n      this.currentValue;\n\n    if (newValue.length < 1 && newValue === `${currentValue} `) {\n      return 0;\n    }\n\n    // If new value matches the desired length and is not the same as the current value with a space\n    const haystack = this.store.getSearchableChoices();\n    const needle = newValue;\n    const keys = isType('Array', this.config.searchFields) ?\n      this.config.searchFields :\n      [this.config.searchFields];\n    const options = Object.assign(this.config.fuseOptions, { keys });\n    const fuse = new Fuse(haystack, options);\n    const results = fuse.search(needle);\n\n    this.currentValue = newValue;\n    this.highlightPosition = 0;\n    this.isSearching = true;\n    this.store.dispatch(filterChoices(results));\n\n    return results.length;\n  }\n\n  /**\n   * Determine the action when a user is searching\n   * @param  {String} value Value entered by user\n   * @return\n   * @private\n   */\n  _handleSearch(value) {\n    if (!value || !this.input.isFocussed) {\n      return;\n    }\n\n    const choices = this.store.getChoices();\n    const hasUnactiveChoices = choices.some(option => !option.active);\n\n    // Check that we have a value to search and the input was an alphanumeric character\n    if (value && value.length >= this.config.searchFloor) {\n      const resultCount = this.config.searchChoices ? this._searchChoices(value) : 0;\n      // Trigger search event\n      this.passedElement.triggerEvent(EVENTS.search, {\n        value,\n        resultCount,\n      });\n    } else if (hasUnactiveChoices) {\n      // Otherwise reset choices to active\n      this.isSearching = false;\n      this.store.dispatch(activateChoices(true));\n    }\n  }\n\n  /**\n   * Trigger event listeners\n   * @return\n   * @private\n   */\n  _addEventListeners() {\n    document.addEventListener('keyup', this._onKeyUp);\n    document.addEventListener('keydown', this._onKeyDown);\n    document.addEventListener('click', this._onClick);\n    document.addEventListener('touchmove', this._onTouchMove);\n    document.addEventListener('touchend', this._onTouchEnd);\n    document.addEventListener('mousedown', this._onMouseDown);\n    document.addEventListener('mouseover', this._onMouseOver);\n\n    if (this.isSelectOneElement) {\n      this.containerOuter.element.addEventListener('focus', this._onFocus);\n      this.containerOuter.element.addEventListener('blur', this._onBlur);\n    }\n\n    this.input.element.addEventListener('focus', this._onFocus);\n    this.input.element.addEventListener('blur', this._onBlur);\n\n    this.input.addEventListeners();\n  }\n\n  /**\n   * Remove event listeners\n   * @return\n   * @private\n   */\n  _removeEventListeners() {\n    document.removeEventListener('keyup', this._onKeyUp);\n    document.removeEventListener('keydown', this._onKeyDown);\n    document.removeEventListener('click', this._onClick);\n    document.removeEventListener('touchmove', this._onTouchMove);\n    document.removeEventListener('touchend', this._onTouchEnd);\n    document.removeEventListener('mousedown', this._onMouseDown);\n    document.removeEventListener('mouseover', this._onMouseOver);\n\n    if (this.isSelectOneElement) {\n      this.containerOuter.element.removeEventListener('focus', this._onFocus);\n      this.containerOuter.element.removeEventListener('blur', this._onBlur);\n    }\n\n    this.input.element.removeEventListener('focus', this._onFocus);\n    this.input.element.removeEventListener('blur', this._onBlur);\n\n    this.input.removeEventListeners();\n  }\n\n  /**\n   * Key down event\n   * @param  {Object} e Event\n   * @return\n   */\n  _onKeyDown(e) {\n    if (e.target !== this.input.element && !this.containerOuter.element.contains(e.target)) {\n      return;\n    }\n\n    const target = e.target;\n    const activeItems = this.store.getItemsFilteredByActive();\n    const hasFocusedInput = this.input.isFocussed;\n    const hasActiveDropdown = this.dropdown.isActive;\n    const hasItems = this.itemList.hasChildren;\n    const keyString = String.fromCharCode(e.keyCode);\n    const backKey = KEY_CODES.BACK_KEY;\n    const deleteKey = KEY_CODES.DELETE_KEY;\n    const enterKey = KEY_CODES.ENTER_KEY;\n    const aKey = KEY_CODES.A_KEY;\n    const escapeKey = KEY_CODES.ESC_KEY;\n    const upKey = KEY_CODES.UP_KEY;\n    const downKey = KEY_CODES.DOWN_KEY;\n    const pageUpKey = KEY_CODES.PAGE_UP_KEY;\n    const pageDownKey = KEY_CODES.PAGE_DOWN_KEY;\n    const ctrlDownKey = (e.ctrlKey || e.metaKey);\n\n    // If a user is typing and the dropdown is not active\n    if (!this.isTextElement && /[a-zA-Z0-9-_ ]/.test(keyString)) {\n      this.showDropdown(true);\n    }\n\n    this.canSearch = this.config.searchEnabled;\n\n    const onAKey = () => {\n      // If CTRL + A or CMD + A have been pressed and there are items to select\n      if (ctrlDownKey && hasItems) {\n        this.canSearch = false;\n        if (\n          this.config.removeItems &&\n          !this.input.getValue() &&\n          this.input.element === document.activeElement\n        ) {\n          // Highlight items\n          this.highlightAll();\n        }\n      }\n    };\n\n    const onEnterKey = () => {\n      // If enter key is pressed and the input has a value\n      if (this.isTextElement && target.value) {\n        const value = this.input.getValue();\n        const canAddItem = this._canAddItem(activeItems, value);\n\n        // All is good, add\n        if (canAddItem.response) {\n          this.hideDropdown();\n          this._addItem(value);\n          this._triggerChange(value);\n          this.clearInput();\n        }\n      }\n\n      if (target.hasAttribute('data-button')) {\n        this._handleButtonAction(activeItems, target);\n        e.preventDefault();\n      }\n\n      if (hasActiveDropdown) {\n        e.preventDefault();\n        const highlighted = this.dropdown.getChild(`.${this.config.classNames.highlightedState}`);\n\n        // If we have a highlighted choice\n        if (highlighted) {\n          // add enter keyCode value\n          if (activeItems[0]) {\n            activeItems[0].keyCode = enterKey;\n          }\n          this._handleChoiceAction(activeItems, highlighted);\n        }\n      } else if (this.isSelectOneElement) {\n        // Open single select dropdown if it's not active\n        this.showDropdown(true);\n        e.preventDefault();\n      }\n    };\n\n    const onEscapeKey = () => {\n      if (hasActiveDropdown) {\n        this.hideDropdown();\n        this.containerOuter.focus();\n      }\n    };\n\n    const onDirectionKey = () => {\n      // If up or down key is pressed, traverse through options\n      if (hasActiveDropdown || this.isSelectOneElement) {\n        // Show dropdown if focus\n        this.showDropdown(true);\n\n        this.canSearch = false;\n\n        const directionInt = e.keyCode === downKey || e.keyCode === pageDownKey ? 1 : -1;\n        const skipKey = e.metaKey || e.keyCode === pageDownKey || e.keyCode === pageUpKey;\n\n        let nextEl;\n        if (skipKey) {\n          if (directionInt > 0) {\n            nextEl = Array.from(\n              this.dropdown.element.querySelectorAll('[data-choice-selectable]'),\n            ).pop();\n          } else {\n            nextEl = this.dropdown.element.querySelector('[data-choice-selectable]');\n          }\n        } else {\n          const currentEl = this.dropdown.element.querySelector(\n            `.${this.config.classNames.highlightedState}`,\n          );\n          if (currentEl) {\n            nextEl = getAdjacentEl(currentEl, '[data-choice-selectable]', directionInt);\n          } else {\n            nextEl = this.dropdown.element.querySelector('[data-choice-selectable]');\n          }\n        }\n\n        if (nextEl) {\n          // We prevent default to stop the cursor moving\n          // when pressing the arrow\n          if (!isScrolledIntoView(nextEl, this.choiceList, directionInt)) {\n            this._scrollToChoice(nextEl, directionInt);\n          }\n          this._highlightChoice(nextEl);\n        }\n\n        // Prevent default to maintain cursor position whilst\n        // traversing dropdown options\n        e.preventDefault();\n      }\n    };\n\n    const onDeleteKey = () => {\n      // If backspace or delete key is pressed and the input has no value\n      if (hasFocusedInput && !e.target.value && !this.isSelectOneElement) {\n        this._handleBackspace(activeItems);\n        e.preventDefault();\n      }\n    };\n\n    // Map keys to key actions\n    const keyDownActions = {\n      [aKey]: onAKey,\n      [enterKey]: onEnterKey,\n      [escapeKey]: onEscapeKey,\n      [upKey]: onDirectionKey,\n      [pageUpKey]: onDirectionKey,\n      [downKey]: onDirectionKey,\n      [pageDownKey]: onDirectionKey,\n      [deleteKey]: onDeleteKey,\n      [backKey]: onDeleteKey,\n    };\n\n    // If keycode has a function, run it\n    if (keyDownActions[e.keyCode]) {\n      keyDownActions[e.keyCode]();\n    }\n  }\n\n  /**\n   * Key up event\n   * @param  {Object} e Event\n   * @return\n   * @private\n   */\n  _onKeyUp(e) {\n    if (e.target !== this.input.element) {\n      return;\n    }\n\n    const value = this.input.getValue();\n    const activeItems = this.store.getItemsFilteredByActive();\n    const canAddItem = this._canAddItem(activeItems, value);\n\n    // We are typing into a text input and have a value, we want to show a dropdown\n    // notice. Otherwise hide the dropdown\n    if (this.isTextElement) {\n      if (value) {\n        if (canAddItem.notice) {\n          const dropdownItem = this._getTemplate('notice', canAddItem.notice);\n          this.dropdown.element.innerHTML = dropdownItem.outerHTML;\n        }\n\n        if (canAddItem.response === true) {\n          this.showDropdown();\n        } else if (!canAddItem.notice) {\n          this.hideDropdown();\n        }\n      } else {\n        this.hideDropdown();\n      }\n    } else {\n      const backKey = KEY_CODES.BACK_KEY;\n      const deleteKey = KEY_CODES.DELETE_KEY;\n\n      // If user has removed value...\n      if ((e.keyCode === backKey || e.keyCode === deleteKey) && !e.target.value) {\n        // ...and it is a multiple select input, activate choices (if searching)\n        if (!this.isTextElement && this.isSearching) {\n          this.isSearching = false;\n          this.store.dispatch(activateChoices(true));\n        }\n      } else if (this.canSearch && canAddItem.response) {\n        this._handleSearch(this.input.getValue());\n      }\n    }\n    // Re-establish canSearch value from changes in _onKeyDown\n    this.canSearch = this.config.searchEnabled;\n  }\n\n  /**\n   * Touch move event\n   * @return\n   * @private\n   */\n  _onTouchMove() {\n    if (this.wasTap === true) {\n      this.wasTap = false;\n    }\n  }\n\n  /**\n   * Touch end event\n   * @param  {Object} e Event\n   * @return\n   * @private\n   */\n  _onTouchEnd(e) {\n    const target = (e.target || e.touches[0].target);\n\n    // If a user tapped within our container...\n    if (this.wasTap === true && this.containerOuter.element.contains(target)) {\n      // ...and we aren't dealing with a single select box, show dropdown/focus input\n      if (\n        (target === this.containerOuter.element || target === this.containerInner.element) &&\n        !this.isSelectOneElement\n      ) {\n        if (this.isTextElement) {\n          // If text element, we only want to focus the input\n          this.input.focus();\n        } else {\n            // If a select box, we want to show the dropdown\n          this.showDropdown(true);\n        }\n      }\n      // Prevents focus event firing\n      e.stopPropagation();\n    }\n\n    this.wasTap = true;\n  }\n\n  /**\n   * Mouse down event\n   * @param  {Object} e Event\n   * @return\n   * @private\n   */\n  _onMouseDown(e) {\n    const target = e.target;\n\n    // If we have our mouse down on the scrollbar and are on IE11...\n    if (target === this.choiceList && this.isIe11) {\n      this.isScrollingOnIe = true;\n    }\n\n    if (this.containerOuter.element.contains(target) && target !== this.input.element) {\n      const activeItems = this.store.getItemsFilteredByActive();\n      const hasShiftKey = e.shiftKey;\n\n      const buttonTarget = findAncestorByAttrName(target, 'data-button');\n      const itemTarget = findAncestorByAttrName(target, 'data-item');\n      const choiceTarget = findAncestorByAttrName(target, 'data-choice');\n\n      if (buttonTarget) {\n        this._handleButtonAction(activeItems, buttonTarget);\n      } else if (itemTarget) {\n        this._handleItemAction(activeItems, itemTarget, hasShiftKey);\n      } else if (choiceTarget) {\n        this._handleChoiceAction(activeItems, choiceTarget);\n      }\n\n      e.preventDefault();\n    }\n  }\n\n    /**\n   * Mouse over (hover) event\n   * @param  {Object} e Event\n   * @return\n   * @private\n   */\n  _onMouseOver(e) {\n    // If the dropdown is either the target or one of its children is the target\n    const targetWithinDropdown = (\n      e.target === this.dropdown || this.dropdown.element.contains(e.target)\n    );\n    const shouldHighlightChoice = targetWithinDropdown && e.target.hasAttribute('data-choice');\n\n    if (shouldHighlightChoice) {\n      this._highlightChoice(e.target);\n    }\n  }\n\n  /**\n   * Click event\n   * @param  {Object} e Event\n   * @return\n   * @private\n   */\n  _onClick(e) {\n    const target = e.target;\n    const hasActiveDropdown = this.dropdown.isActive;\n    const activeItems = this.store.getItemsFilteredByActive();\n\n    // If target is something that concerns us\n    if (this.containerOuter.element.contains(target)) {\n      if (!hasActiveDropdown) {\n        if (this.isTextElement) {\n          if (document.activeElement !== this.input.element) {\n            this.input.focus();\n          }\n        } else if (this.canSearch) {\n          this.showDropdown(true);\n        } else {\n          this.showDropdown();\n          // code smell\n          this.containerOuter.focus();\n        }\n      } else if (\n        this.isSelectOneElement &&\n        target !== this.input.element &&\n        !this.dropdown.element.contains(target)\n      ) {\n        this.hideDropdown(true);\n      }\n    } else {\n      const hasHighlightedItems = activeItems.some(item => item.highlighted);\n\n      // De-select any highlighted items\n      if (hasHighlightedItems) {\n        this.unhighlightAll();\n      }\n\n      // Remove focus state\n      this.containerOuter.removeFocusState();\n\n      // Close all other dropdowns\n      this.hideDropdown();\n    }\n  }\n\n  /**\n   * Focus event\n   * @param  {Object} e Event\n   * @return\n   * @private\n   */\n  _onFocus(e) {\n    const target = e.target;\n    if (!this.containerOuter.element.contains(target)) {\n      return;\n    }\n\n    const focusActions = {\n      text: () => {\n        if (target === this.input.element) {\n          this.containerOuter.addFocusState();\n        }\n      },\n      'select-one': () => {\n        this.containerOuter.addFocusState();\n        if (target === this.input.element) {\n          // Show dropdown if it isn't already showing\n          this.showDropdown();\n        }\n      },\n      'select-multiple': () => {\n        if (target === this.input.element) {\n          // If element is a select box, the focused element is the container and the dropdown\n          // isn't already open, focus and show dropdown\n          this.containerOuter.addFocusState();\n          this.showDropdown(true);\n        }\n      },\n    };\n\n    focusActions[this.passedElement.element.type]();\n  }\n\n  /**\n   * Blur event\n   * @param  {Object} e Event\n   * @return\n   * @private\n   */\n  _onBlur(e) {\n    const target = e.target;\n    // If target is something that concerns us\n    if (this.containerOuter.element.contains(target) && !this.isScrollingOnIe) {\n      const activeItems = this.store.getItemsFilteredByActive();\n      const hasHighlightedItems = activeItems.some(item => item.highlighted);\n      const blurActions = {\n        text: () => {\n          if (target === this.input.element) {\n            // Remove the focus state\n            this.containerOuter.removeFocusState();\n            // De-select any highlighted items\n            if (hasHighlightedItems) {\n              this.unhighlightAll();\n            }\n            this.hideDropdown();\n          }\n        },\n        'select-one': () => {\n          this.containerOuter.removeFocusState();\n          if (target === this.input.element ||\n            (target === this.containerOuter.element && !this.canSearch)) {\n            this.hideDropdown();\n          }\n        },\n        'select-multiple': () => {\n          if (target === this.input.element) {\n            // Remove the focus state\n            this.containerOuter.removeFocusState();\n            this.hideDropdown();\n            // De-select any highlighted items\n            if (hasHighlightedItems) {\n              this.unhighlightAll();\n            }\n          }\n        },\n      };\n\n      blurActions[this.passedElement.element.type]();\n    } else {\n      // On IE11, clicking the scollbar blurs our input and thus\n      // closes the dropdown. To stop this, we refocus our input\n      // if we know we are on IE *and* are scrolling.\n      this.isScrollingOnIe = false;\n      this.input.element.focus();\n    }\n  }\n\n  /**\n   * Scroll to an option element\n   * @param  {HTMLElement} choice  Option to scroll to\n   * @param  {Number} direction  Whether option is above or below\n   * @return\n   * @private\n   */\n  _scrollToChoice(choice, direction) {\n    if (!choice) {\n      return;\n    }\n\n    const dropdownHeight = this.choiceList.height;\n    const choiceHeight = choice.offsetHeight;\n    // Distance from bottom of element to top of parent\n    const choicePos = choice.offsetTop + choiceHeight;\n    // Scroll position of dropdown\n    const containerScrollPos = this.choiceList.scrollPos + dropdownHeight;\n    // Difference between the choice and scroll position\n    const endPoint = direction > 0 ? (\n        (this.choiceList.scrollPos + choicePos) - containerScrollPos) :\n      choice.offsetTop;\n\n    const animateScroll = () => {\n      const strength = SCROLLING_SPEED;\n      const choiceListScrollTop = this.choiceList.scrollPos;\n      let continueAnimation = false;\n      let easing;\n      let distance;\n\n      if (direction > 0) {\n        easing = (endPoint - choiceListScrollTop) / strength;\n        distance = easing > 1 ? easing : 1;\n\n        this.choiceList.scrollTo(choiceListScrollTop + distance);\n        if (choiceListScrollTop < endPoint) {\n          continueAnimation = true;\n        }\n      } else {\n        easing = (choiceListScrollTop - endPoint) / strength;\n        distance = easing > 1 ? easing : 1;\n\n        this.choiceList.scrollTo(choiceListScrollTop - distance);\n        if (choiceListScrollTop > endPoint) {\n          continueAnimation = true;\n        }\n      }\n\n      if (continueAnimation) {\n        requestAnimationFrame((time) => {\n          animateScroll(time, endPoint, direction);\n        });\n      }\n    };\n\n    requestAnimationFrame((time) => {\n      animateScroll(time, endPoint, direction);\n    });\n  }\n\n  /**\n   * Highlight choice\n   * @param  {HTMLElement} [el] Element to highlight\n   * @return\n   * @private\n   */\n  _highlightChoice(el = null) {\n    // Highlight first element in dropdown\n    const choices = Array.from(this.dropdown.element.querySelectorAll('[data-choice-selectable]'));\n\n    if (!choices.length) {\n      return;\n    }\n\n    let passedEl = el;\n    const highlightedChoices = Array.from(\n      this.dropdown.element.querySelectorAll(`.${this.config.classNames.highlightedState}`),\n    );\n    const hasActiveDropdown = this.dropdown.isActive;\n\n    // Remove any highlighted choices\n    highlightedChoices.forEach((choice) => {\n      choice.classList.remove(this.config.classNames.highlightedState);\n      choice.setAttribute('aria-selected', 'false');\n    });\n\n    if (passedEl) {\n      this.highlightPosition = choices.indexOf(passedEl);\n    } else {\n      // Highlight choice based on last known highlight location\n      if (choices.length > this.highlightPosition) {\n        // If we have an option to highlight\n        passedEl = choices[this.highlightPosition];\n      } else {\n        // Otherwise highlight the option before\n        passedEl = choices[choices.length - 1];\n      }\n\n      if (!passedEl) {\n        passedEl = choices[0];\n      }\n    }\n\n    // Highlight given option, and set accessiblity attributes\n    passedEl.classList.add(this.config.classNames.highlightedState);\n    passedEl.setAttribute('aria-selected', 'true');\n\n    if (hasActiveDropdown) {\n      // IE11 ignores aria-label and blocks virtual keyboard\n      // if aria-activedescendant is set without a dropdown\n      this.input.setActiveDescendant(passedEl.id);\n      this.containerOuter.setActiveDescendant(passedEl.id);\n    }\n  }\n\n  /**\n   * Add item to store with correct value\n   * @param {String} value Value to add to store\n   * @param {String} [label] Label to add to store\n   * @param {Number} [choiceId=-1] ID of the associated choice that was selected\n   * @param {Number} [groupId=-1] ID of group choice is within. Negative number indicates no group\n   * @param {Object} [customProperties] Object containing user defined properties\n   * @return {Object} Class instance\n   * @public\n   */\n  _addItem(\n    value,\n    label = null,\n    choiceId = -1,\n    groupId = -1,\n    customProperties = null,\n    placeholder = false,\n    keyCode = null,\n  ) {\n    let passedValue = isType('String', value) ? value.trim() : value;\n    const passedKeyCode = keyCode;\n    const items = this.store.getItems();\n    const passedLabel = label || passedValue;\n    const passedOptionId = parseInt(choiceId, 10) || -1;\n\n    // Get group if group ID passed\n    const group = groupId >= 0 ? this.store.getGroupById(groupId) : null;\n\n    // Generate unique id\n    const id = items ? items.length + 1 : 1;\n\n    // If a prepended value has been passed, prepend it\n    if (this.config.prependValue) {\n      passedValue = this.config.prependValue + passedValue.toString();\n    }\n\n    // If an appended value has been passed, append it\n    if (this.config.appendValue) {\n      passedValue += this.config.appendValue.toString();\n    }\n\n    this.store.dispatch(\n      addItem(\n        passedValue,\n        passedLabel,\n        id,\n        passedOptionId,\n        groupId,\n        customProperties,\n        placeholder,\n        passedKeyCode,\n      ),\n    );\n\n    if (this.isSelectOneElement) {\n      this.removeActiveItems(id);\n    }\n\n    // Trigger change event\n    if (group && group.value) {\n      this.passedElement.triggerEvent(EVENTS.addItem, {\n        id,\n        value: passedValue,\n        label: passedLabel,\n        groupValue: group.value,\n        keyCode: passedKeyCode,\n      });\n    } else {\n      this.passedElement.triggerEvent(EVENTS.addItem, {\n        id,\n        value: passedValue,\n        label: passedLabel,\n        keyCode: passedKeyCode,\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Remove item from store\n   * @param {Object} item Item to remove\n   * @return {Object} Class instance\n   * @public\n   */\n  _removeItem(item) {\n    if (!item || !isType('Object', item)) {\n      return this;\n    }\n\n    const { id, value, label, choiceId, groupId } = item;\n    const group = groupId >= 0 ? this.store.getGroupById(groupId) : null;\n\n    this.store.dispatch(removeItem(id, choiceId));\n\n    if (group && group.value) {\n      this.passedElement.triggerEvent(EVENTS.removeItem, {\n        id,\n        value,\n        label,\n        groupValue: group.value,\n      });\n    } else {\n      this.passedElement.triggerEvent(EVENTS.removeItem, {\n        id,\n        value,\n        label,\n      });\n    }\n\n    return this;\n  }\n\n  /**\n   * Add choice to dropdown\n   * @param {String} value Value of choice\n   * @param {String} [label] Label of choice\n   * @param {Boolean} [isSelected=false] Whether choice is selected\n   * @param {Boolean} [isDisabled=false] Whether choice is disabled\n   * @param {Number} [groupId=-1] ID of group choice is within. Negative number indicates no group\n   * @param {Object} [customProperties] Object containing user defined properties\n   * @return\n   * @private\n   */\n  _addChoice(\n    value,\n    label = null,\n    isSelected = false,\n    isDisabled = false,\n    groupId = -1,\n    customProperties = null,\n    placeholder = false,\n    keyCode = null,\n  ) {\n    if (typeof value === 'undefined' || value === null) {\n      return;\n    }\n\n    // Generate unique id\n    const choices = this.store.getChoices();\n    const choiceLabel = label || value;\n    const choiceId = choices ? choices.length + 1 : 1;\n    const choiceElementId = `${this.baseId}-${this.idNames.itemChoice}-${choiceId}`;\n\n    this.store.dispatch(\n      addChoice(\n        value,\n        choiceLabel,\n        choiceId,\n        groupId,\n        isDisabled,\n        choiceElementId,\n        customProperties,\n        placeholder,\n        keyCode,\n      ),\n    );\n\n    if (isSelected) {\n      this._addItem(\n        value,\n        choiceLabel,\n        choiceId,\n        undefined,\n        customProperties,\n        placeholder,\n        keyCode,\n      );\n    }\n  }\n\n  /**\n   * Clear all choices added to the store.\n   * @return\n   * @private\n   */\n  _clearChoices() {\n    this.store.dispatch(\n      clearChoices(),\n    );\n  }\n\n  /**\n   * Add group to dropdown\n   * @param {Object} group Group to add\n   * @param {Number} id Group ID\n   * @param {String} [valueKey] name of the value property on the object\n   * @param {String} [labelKey] name of the label property on the object\n   * @return\n   * @private\n   */\n  _addGroup(group, id, valueKey = 'value', labelKey = 'label') {\n    const groupChoices = isType('Object', group) ?\n      group.choices :\n      Array.from(group.getElementsByTagName('OPTION'));\n    const groupId = id || Math.floor(new Date().valueOf() * Math.random());\n    const isDisabled = group.disabled ? group.disabled : false;\n\n    if (groupChoices) {\n      this.store.dispatch(\n        addGroup(\n          group.label,\n          groupId,\n          true,\n          isDisabled,\n        ),\n      );\n\n      const addGroupChoices = (choice) => {\n        const isOptDisabled = choice.disabled || (choice.parentNode && choice.parentNode.disabled);\n        this._addChoice(\n          choice[valueKey],\n          (isType('Object', choice)) ? choice[labelKey] : choice.innerHTML,\n          choice.selected,\n          isOptDisabled,\n          groupId,\n          choice.customProperties,\n          choice.placeholder,\n        );\n      };\n\n      groupChoices.forEach(addGroupChoices);\n    } else {\n      this.store.dispatch(\n        addGroup(\n          group.label,\n          group.id,\n          false,\n          group.disabled,\n        ),\n      );\n    }\n  }\n\n  /**\n   * Get template from name\n   * @param  {String}    template Name of template to get\n   * @param  {...}       args     Data to pass to template\n   * @return {HTMLElement}        Template\n   * @private\n   */\n  _getTemplate(template, ...args) {\n    if (!template) {\n      return null;\n    }\n    const templates = this.config.templates;\n    const globalClasses = this.config.classNames;\n    return templates[template].call(this, globalClasses, ...args);\n  }\n\n  /**\n   * Create HTML element based on type and arguments\n   * @return\n   * @private\n   */\n  _createTemplates() {\n    // User's custom templates\n    const callbackTemplate = this.config.callbackOnCreateTemplates;\n    let userTemplates = {};\n    if (callbackTemplate && isType('Function', callbackTemplate)) {\n      userTemplates = callbackTemplate.call(this, strToEl);\n    }\n\n    this.config.templates = extend(TEMPLATES, userTemplates);\n  }\n\n  /**\n   * Create DOM structure around passed select element\n   * @return\n   * @private\n   */\n  _createStructure() {\n    const direction = this.passedElement.element.getAttribute('dir') || 'ltr';\n    const containerOuter = this._getTemplate('containerOuter',\n      direction,\n      this.isSelectElement,\n      this.isSelectOneElement,\n      this.config.searchEnabled,\n      this.passedElement.element.type,\n    );\n    const containerInner = this._getTemplate('containerInner');\n    const itemList = this._getTemplate('itemList', this.isSelectOneElement);\n    const choiceList = this._getTemplate('choiceList', this.isSelectOneElement);\n    const input = this._getTemplate('input');\n    const dropdown = this._getTemplate('dropdown');\n\n    this.containerOuter = new Container(this, containerOuter, this.config.classNames);\n    this.containerInner = new Container(this, containerInner, this.config.classNames);\n    this.input = new Input(this, input, this.config.classNames);\n    this.choiceList = new List(this, choiceList, this.config.classNames);\n    this.itemList = new List(this, itemList, this.config.classNames);\n    this.dropdown = new Dropdown(this, dropdown, this.config.classNames);\n\n    this.passedElement.conceal();\n\n    // Wrap input in container preserving DOM ordering\n    wrap(this.passedElement.element, this.containerInner.element);\n    // Wrapper inner container with outer container\n    wrap(this.containerInner.element, this.containerOuter.element);\n\n    if (this.isSelectOneElement) {\n      this.input.setPlaceholder(this.config.searchPlaceholderValue || '');\n    } else if (this.placeholder) {\n      this.input.setPlaceholder(this.placeholder);\n      this.input.setWidth(true);\n    }\n\n    if (!this.config.addItems) {\n      this.disable();\n    }\n\n    this.containerOuter.element.appendChild(this.containerInner.element);\n    this.containerOuter.element.appendChild(this.dropdown.element);\n    this.containerInner.element.appendChild(itemList);\n\n    if (!this.isTextElement) {\n      dropdown.appendChild(choiceList);\n    }\n\n    if (!this.isSelectOneElement) {\n      this.containerInner.element.appendChild(this.input.element);\n    } else if (this.canSearch) {\n      dropdown.insertBefore(input, dropdown.firstChild);\n    }\n\n    if (this.isSelectElement) {\n      this._addPredefinedChoices();\n    } else if (this.isTextElement) {\n      this._addPredefinedItems();\n    }\n  }\n\n  _addPredefinedChoices() {\n    const passedGroups = this.passedElement.getOptionGroups();\n\n    this.highlightPosition = 0;\n    this.isSearching = false;\n\n    if (passedGroups && passedGroups.length) {\n      // If we have a placeholder option\n      const placeholderChoice = this.passedElement.getPlaceholderOption();\n      if (placeholderChoice && placeholderChoice.parentNode.tagName === 'SELECT') {\n        this._addChoice(\n          placeholderChoice.value,\n          placeholderChoice.innerHTML,\n          placeholderChoice.selected,\n          placeholderChoice.disabled,\n          undefined,\n          undefined,\n            /* placeholder */ true,\n        );\n      }\n\n      passedGroups.forEach((group) => {\n        this._addGroup(group, (group.id || null));\n      });\n    } else {\n      const passedOptions = this.passedElement.getOptions();\n      const filter = this.config.sortFilter;\n      const allChoices = this.presetChoices;\n\n      // Create array of options from option elements\n      passedOptions.forEach((o) => {\n        allChoices.push({\n          value: o.value,\n          label: o.innerHTML,\n          selected: o.selected,\n          disabled: o.disabled || o.parentNode.disabled,\n          placeholder: o.hasAttribute('placeholder'),\n        });\n      });\n\n      // If sorting is enabled or the user is searching, filter choices\n      if (this.config.shouldSort) {\n        allChoices.sort(filter);\n      }\n\n      // Determine whether there is a selected choice\n      const hasSelectedChoice = allChoices.some(choice => choice.selected);\n      const handleChoice = (choice, index) => {\n        if (this.isSelectElement) {\n          // If the choice is actually a group\n          if (choice.choices) {\n            this._addGroup(choice, choice.id || null);\n          } else {\n            // If there is a selected choice already or the choice is not\n            // the first in the array, add each choice normally\n            // Otherwise pre-select the first choice in the array if it's a single select\n            const shouldPreselect = this.isSelectOneElement && !hasSelectedChoice && index === 0;\n            const isSelected = shouldPreselect ? true : choice.selected;\n            const isDisabled = shouldPreselect ? false : choice.disabled;\n\n            this._addChoice(\n              choice.value,\n              choice.label,\n              isSelected,\n              isDisabled,\n              undefined,\n              choice.customProperties,\n              choice.placeholder,\n            );\n          }\n        } else {\n          this._addChoice(\n            choice.value,\n            choice.label,\n            choice.selected,\n            choice.disabled,\n            undefined,\n            choice.customProperties,\n            choice.placeholder,\n          );\n        }\n      };\n\n      // Add each choice\n      allChoices.forEach((choice, index) => handleChoice(choice, index));\n    }\n  }\n\n  _addPredefinedItems() {\n    const handlePresetItem = (item) => {\n      const itemType = getType(item);\n      if (itemType === 'Object') {\n        if (!item.value) {\n          return;\n        }\n        this._addItem(\n          item.value,\n          item.label,\n          item.id,\n          undefined,\n          item.customProperties,\n          item.placeholder,\n        );\n      } else if (itemType === 'String') {\n        this._addItem(item);\n      }\n    };\n\n    this.presetItems.forEach(item => handlePresetItem(item));\n  }\n\n  _setChoiceOrItem(item) {\n    const itemType = getType(item).toLowerCase();\n    const handleType = {\n      object: () => {\n        if (!item.value) {\n          return;\n        }\n\n        // If we are dealing with a select input, we need to create an option first\n        // that is then selected. For text inputs we can just add items normally.\n        if (!this.isTextElement) {\n          this._addChoice(\n            item.value,\n            item.label,\n            true,\n            false, -1,\n            item.customProperties,\n            item.placeholder,\n          );\n        } else {\n          this._addItem(\n            item.value,\n            item.label,\n            item.id,\n            undefined,\n            item.customProperties,\n            item.placeholder,\n          );\n        }\n      },\n      string: () => {\n        if (!this.isTextElement) {\n          this._addChoice(\n            item,\n            item,\n            true,\n            false, -1,\n            null,\n          );\n        } else {\n          this._addItem(item);\n        }\n      },\n    };\n\n    handleType[itemType]();\n  }\n\n  _findAndSelectChoiceByValue(val) {\n    const choices = this.store.getChoices();\n    // Check 'value' property exists and the choice isn't already selected\n    const foundChoice = choices.find(choice => choice.value === val);\n\n    if (foundChoice && !foundChoice.selected) {\n      this._addItem(\n        foundChoice.value,\n        foundChoice.label,\n        foundChoice.id,\n        foundChoice.groupId,\n        foundChoice.customProperties,\n        foundChoice.placeholder,\n        foundChoice.keyCode,\n      );\n    }\n  }\n\n  /* =====  End of Private functions  ====== */\n}\n\nChoices.userDefaults = {};\n\n// We cannot export default here due to Webpack: https://github.com/webpack/webpack/issues/3929\nmodule.exports = Choices;\n\n\n\n// WEBPACK FOOTER //\n// src/scripts/src/choices.js","/*!\n * Fuse.js v3.2.0 - Lightweight fuzzy-search (http://fusejs.io)\n * \n * Copyright (c) 2012-2017 Kirollos Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n * \n * http://www.apache.org/licenses/LICENSE-2.0\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Fuse\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Fuse\"] = factory();\n\telse\n\t\troot[\"Fuse\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 8);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar bitapRegexSearch = __webpack_require__(5);\nvar bitapSearch = __webpack_require__(7);\nvar patternAlphabet = __webpack_require__(4);\n\nvar Bitap = function () {\n  function Bitap(pattern, _ref) {\n    var _ref$location = _ref.location,\n        location = _ref$location === undefined ? 0 : _ref$location,\n        _ref$distance = _ref.distance,\n        distance = _ref$distance === undefined ? 100 : _ref$distance,\n        _ref$threshold = _ref.threshold,\n        threshold = _ref$threshold === undefined ? 0.6 : _ref$threshold,\n        _ref$maxPatternLength = _ref.maxPatternLength,\n        maxPatternLength = _ref$maxPatternLength === undefined ? 32 : _ref$maxPatternLength,\n        _ref$isCaseSensitive = _ref.isCaseSensitive,\n        isCaseSensitive = _ref$isCaseSensitive === undefined ? false : _ref$isCaseSensitive,\n        _ref$tokenSeparator = _ref.tokenSeparator,\n        tokenSeparator = _ref$tokenSeparator === undefined ? / +/g : _ref$tokenSeparator,\n        _ref$findAllMatches = _ref.findAllMatches,\n        findAllMatches = _ref$findAllMatches === undefined ? false : _ref$findAllMatches,\n        _ref$minMatchCharLeng = _ref.minMatchCharLength,\n        minMatchCharLength = _ref$minMatchCharLeng === undefined ? 1 : _ref$minMatchCharLeng;\n\n    _classCallCheck(this, Bitap);\n\n    this.options = {\n      location: location,\n      distance: distance,\n      threshold: threshold,\n      maxPatternLength: maxPatternLength,\n      isCaseSensitive: isCaseSensitive,\n      tokenSeparator: tokenSeparator,\n      findAllMatches: findAllMatches,\n      minMatchCharLength: minMatchCharLength\n    };\n\n    this.pattern = this.options.isCaseSensitive ? pattern : pattern.toLowerCase();\n\n    if (this.pattern.length <= maxPatternLength) {\n      this.patternAlphabet = patternAlphabet(this.pattern);\n    }\n  }\n\n  _createClass(Bitap, [{\n    key: 'search',\n    value: function search(text) {\n      if (!this.options.isCaseSensitive) {\n        text = text.toLowerCase();\n      }\n\n      // Exact match\n      if (this.pattern === text) {\n        return {\n          isMatch: true,\n          score: 0,\n          matchedIndices: [[0, text.length - 1]]\n        };\n      }\n\n      // When pattern length is greater than the machine word length, just do a a regex comparison\n      var _options = this.options,\n          maxPatternLength = _options.maxPatternLength,\n          tokenSeparator = _options.tokenSeparator;\n\n      if (this.pattern.length > maxPatternLength) {\n        return bitapRegexSearch(text, this.pattern, tokenSeparator);\n      }\n\n      // Otherwise, use Bitap algorithm\n      var _options2 = this.options,\n          location = _options2.location,\n          distance = _options2.distance,\n          threshold = _options2.threshold,\n          findAllMatches = _options2.findAllMatches,\n          minMatchCharLength = _options2.minMatchCharLength;\n\n      return bitapSearch(text, this.pattern, this.patternAlphabet, {\n        location: location,\n        distance: distance,\n        threshold: threshold,\n        findAllMatches: findAllMatches,\n        minMatchCharLength: minMatchCharLength\n      });\n    }\n  }]);\n\n  return Bitap;\n}();\n\n// let x = new Bitap(\"od mn war\", {})\n// let result = x.search(\"Old Man's War\")\n// console.log(result)\n\nmodule.exports = Bitap;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar isArray = __webpack_require__(0);\n\nvar deepValue = function deepValue(obj, path, list) {\n  if (!path) {\n    // If there's no path left, we've gotten to the object we care about.\n    list.push(obj);\n  } else {\n    var dotIndex = path.indexOf('.');\n    var firstSegment = path;\n    var remaining = null;\n\n    if (dotIndex !== -1) {\n      firstSegment = path.slice(0, dotIndex);\n      remaining = path.slice(dotIndex + 1);\n    }\n\n    var value = obj[firstSegment];\n\n    if (value !== null && value !== undefined) {\n      if (!remaining && (typeof value === 'string' || typeof value === 'number')) {\n        list.push(value.toString());\n      } else if (isArray(value)) {\n        // Search each item in the array.\n        for (var i = 0, len = value.length; i < len; i += 1) {\n          deepValue(value[i], remaining, list);\n        }\n      } else if (remaining) {\n        // An object. Recurse further.\n        deepValue(value, remaining, list);\n      }\n    }\n  }\n\n  return list;\n};\n\nmodule.exports = function (obj, path) {\n  return deepValue(obj, path, []);\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function () {\n  var matchmask = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var minMatchCharLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n  var matchedIndices = [];\n  var start = -1;\n  var end = -1;\n  var i = 0;\n\n  for (var len = matchmask.length; i < len; i += 1) {\n    var match = matchmask[i];\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n      if (end - start + 1 >= minMatchCharLength) {\n        matchedIndices.push([start, end]);\n      }\n      start = -1;\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    matchedIndices.push([start, i - 1]);\n  }\n\n  return matchedIndices;\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (pattern) {\n  var mask = {};\n  var len = pattern.length;\n\n  for (var i = 0; i < len; i += 1) {\n    mask[pattern.charAt(i)] = 0;\n  }\n\n  for (var _i = 0; _i < len; _i += 1) {\n    mask[pattern.charAt(_i)] |= 1 << len - _i - 1;\n  }\n\n  return mask;\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar SPECIAL_CHARS_REGEX = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;\n\nmodule.exports = function (text, pattern) {\n  var tokenSeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : / +/g;\n\n  var regex = new RegExp(pattern.replace(SPECIAL_CHARS_REGEX, '\\\\$&').replace(tokenSeparator, '|'));\n  var matches = text.match(regex);\n  var isMatch = !!matches;\n  var matchedIndices = [];\n\n  if (isMatch) {\n    for (var i = 0, matchesLen = matches.length; i < matchesLen; i += 1) {\n      var match = matches[i];\n      matchedIndices.push([text.indexOf(match), match.length - 1]);\n    }\n  }\n\n  return {\n    // TODO: revisit this score\n    score: isMatch ? 0.5 : 1,\n    isMatch: isMatch,\n    matchedIndices: matchedIndices\n  };\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (pattern, _ref) {\n  var _ref$errors = _ref.errors,\n      errors = _ref$errors === undefined ? 0 : _ref$errors,\n      _ref$currentLocation = _ref.currentLocation,\n      currentLocation = _ref$currentLocation === undefined ? 0 : _ref$currentLocation,\n      _ref$expectedLocation = _ref.expectedLocation,\n      expectedLocation = _ref$expectedLocation === undefined ? 0 : _ref$expectedLocation,\n      _ref$distance = _ref.distance,\n      distance = _ref$distance === undefined ? 100 : _ref$distance;\n\n  var accuracy = errors / pattern.length;\n  var proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy;\n  }\n\n  return accuracy + proximity / distance;\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar bitapScore = __webpack_require__(6);\nvar matchedIndices = __webpack_require__(3);\n\nmodule.exports = function (text, pattern, patternAlphabet, _ref) {\n  var _ref$location = _ref.location,\n      location = _ref$location === undefined ? 0 : _ref$location,\n      _ref$distance = _ref.distance,\n      distance = _ref$distance === undefined ? 100 : _ref$distance,\n      _ref$threshold = _ref.threshold,\n      threshold = _ref$threshold === undefined ? 0.6 : _ref$threshold,\n      _ref$findAllMatches = _ref.findAllMatches,\n      findAllMatches = _ref$findAllMatches === undefined ? false : _ref$findAllMatches,\n      _ref$minMatchCharLeng = _ref.minMatchCharLength,\n      minMatchCharLength = _ref$minMatchCharLeng === undefined ? 1 : _ref$minMatchCharLeng;\n\n  var expectedLocation = location;\n  // Set starting location at beginning text and initialize the alphabet.\n  var textLen = text.length;\n  // Highest score beyond which we give up.\n  var currentThreshold = threshold;\n  // Is there a nearby exact match? (speedup)\n  var bestLocation = text.indexOf(pattern, expectedLocation);\n\n  var patternLen = pattern.length;\n\n  // a mask of the matches\n  var matchMask = [];\n  for (var i = 0; i < textLen; i += 1) {\n    matchMask[i] = 0;\n  }\n\n  if (bestLocation !== -1) {\n    var score = bitapScore(pattern, {\n      errors: 0,\n      currentLocation: bestLocation,\n      expectedLocation: expectedLocation,\n      distance: distance\n    });\n    currentThreshold = Math.min(score, currentThreshold);\n\n    // What about in the other direction? (speed up)\n    bestLocation = text.lastIndexOf(pattern, expectedLocation + patternLen);\n\n    if (bestLocation !== -1) {\n      var _score = bitapScore(pattern, {\n        errors: 0,\n        currentLocation: bestLocation,\n        expectedLocation: expectedLocation,\n        distance: distance\n      });\n      currentThreshold = Math.min(_score, currentThreshold);\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1;\n\n  var lastBitArr = [];\n  var finalScore = 1;\n  var binMax = patternLen + textLen;\n\n  var mask = 1 << patternLen - 1;\n\n  for (var _i = 0; _i < patternLen; _i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    var binMin = 0;\n    var binMid = binMax;\n\n    while (binMin < binMid) {\n      var _score3 = bitapScore(pattern, {\n        errors: _i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation: expectedLocation,\n        distance: distance\n      });\n\n      if (_score3 <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid;\n\n    var start = Math.max(1, expectedLocation - binMid + 1);\n    var finish = findAllMatches ? textLen : Math.min(expectedLocation + binMid, textLen) + patternLen;\n\n    // Initialize the bit array\n    var bitArr = Array(finish + 2);\n\n    bitArr[finish + 1] = (1 << _i) - 1;\n\n    for (var j = finish; j >= start; j -= 1) {\n      var currentLocation = j - 1;\n      var charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (charMatch) {\n        matchMask[currentLocation] = 1;\n      }\n\n      // First pass: exact match\n      bitArr[j] = (bitArr[j + 1] << 1 | 1) & charMatch;\n\n      // Subsequent passes: fuzzy match\n      if (_i !== 0) {\n        bitArr[j] |= (lastBitArr[j + 1] | lastBitArr[j]) << 1 | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = bitapScore(pattern, {\n          errors: _i,\n          currentLocation: currentLocation,\n          expectedLocation: expectedLocation,\n          distance: distance\n        });\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation;\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break;\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    var _score2 = bitapScore(pattern, {\n      errors: _i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation: expectedLocation,\n      distance: distance\n    });\n\n    if (_score2 > currentThreshold) {\n      break;\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  // Count exact matches (those with a score of 0) to be \"almost\" exact\n  return {\n    isMatch: bestLocation >= 0,\n    score: finalScore === 0 ? 0.001 : finalScore,\n    matchedIndices: matchedIndices(matchMask, minMatchCharLength)\n  };\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Bitap = __webpack_require__(1);\nvar deepValue = __webpack_require__(2);\nvar isArray = __webpack_require__(0);\n\nvar Fuse = function () {\n  function Fuse(list, _ref) {\n    var _ref$location = _ref.location,\n        location = _ref$location === undefined ? 0 : _ref$location,\n        _ref$distance = _ref.distance,\n        distance = _ref$distance === undefined ? 100 : _ref$distance,\n        _ref$threshold = _ref.threshold,\n        threshold = _ref$threshold === undefined ? 0.6 : _ref$threshold,\n        _ref$maxPatternLength = _ref.maxPatternLength,\n        maxPatternLength = _ref$maxPatternLength === undefined ? 32 : _ref$maxPatternLength,\n        _ref$caseSensitive = _ref.caseSensitive,\n        caseSensitive = _ref$caseSensitive === undefined ? false : _ref$caseSensitive,\n        _ref$tokenSeparator = _ref.tokenSeparator,\n        tokenSeparator = _ref$tokenSeparator === undefined ? / +/g : _ref$tokenSeparator,\n        _ref$findAllMatches = _ref.findAllMatches,\n        findAllMatches = _ref$findAllMatches === undefined ? false : _ref$findAllMatches,\n        _ref$minMatchCharLeng = _ref.minMatchCharLength,\n        minMatchCharLength = _ref$minMatchCharLeng === undefined ? 1 : _ref$minMatchCharLeng,\n        _ref$id = _ref.id,\n        id = _ref$id === undefined ? null : _ref$id,\n        _ref$keys = _ref.keys,\n        keys = _ref$keys === undefined ? [] : _ref$keys,\n        _ref$shouldSort = _ref.shouldSort,\n        shouldSort = _ref$shouldSort === undefined ? true : _ref$shouldSort,\n        _ref$getFn = _ref.getFn,\n        getFn = _ref$getFn === undefined ? deepValue : _ref$getFn,\n        _ref$sortFn = _ref.sortFn,\n        sortFn = _ref$sortFn === undefined ? function (a, b) {\n      return a.score - b.score;\n    } : _ref$sortFn,\n        _ref$tokenize = _ref.tokenize,\n        tokenize = _ref$tokenize === undefined ? false : _ref$tokenize,\n        _ref$matchAllTokens = _ref.matchAllTokens,\n        matchAllTokens = _ref$matchAllTokens === undefined ? false : _ref$matchAllTokens,\n        _ref$includeMatches = _ref.includeMatches,\n        includeMatches = _ref$includeMatches === undefined ? false : _ref$includeMatches,\n        _ref$includeScore = _ref.includeScore,\n        includeScore = _ref$includeScore === undefined ? false : _ref$includeScore,\n        _ref$verbose = _ref.verbose,\n        verbose = _ref$verbose === undefined ? false : _ref$verbose;\n\n    _classCallCheck(this, Fuse);\n\n    this.options = {\n      location: location,\n      distance: distance,\n      threshold: threshold,\n      maxPatternLength: maxPatternLength,\n      isCaseSensitive: caseSensitive,\n      tokenSeparator: tokenSeparator,\n      findAllMatches: findAllMatches,\n      minMatchCharLength: minMatchCharLength,\n      id: id,\n      keys: keys,\n      includeMatches: includeMatches,\n      includeScore: includeScore,\n      shouldSort: shouldSort,\n      getFn: getFn,\n      sortFn: sortFn,\n      verbose: verbose,\n      tokenize: tokenize,\n      matchAllTokens: matchAllTokens\n    };\n\n    this.setCollection(list);\n  }\n\n  _createClass(Fuse, [{\n    key: 'setCollection',\n    value: function setCollection(list) {\n      this.list = list;\n      return list;\n    }\n  }, {\n    key: 'search',\n    value: function search(pattern) {\n      this._log('---------\\nSearch pattern: \"' + pattern + '\"');\n\n      var _prepareSearchers2 = this._prepareSearchers(pattern),\n          tokenSearchers = _prepareSearchers2.tokenSearchers,\n          fullSearcher = _prepareSearchers2.fullSearcher;\n\n      var _search2 = this._search(tokenSearchers, fullSearcher),\n          weights = _search2.weights,\n          results = _search2.results;\n\n      this._computeScore(weights, results);\n\n      if (this.options.shouldSort) {\n        this._sort(results);\n      }\n\n      return this._format(results);\n    }\n  }, {\n    key: '_prepareSearchers',\n    value: function _prepareSearchers() {\n      var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      var tokenSearchers = [];\n\n      if (this.options.tokenize) {\n        // Tokenize on the separator\n        var tokens = pattern.split(this.options.tokenSeparator);\n        for (var i = 0, len = tokens.length; i < len; i += 1) {\n          tokenSearchers.push(new Bitap(tokens[i], this.options));\n        }\n      }\n\n      var fullSearcher = new Bitap(pattern, this.options);\n\n      return { tokenSearchers: tokenSearchers, fullSearcher: fullSearcher };\n    }\n  }, {\n    key: '_search',\n    value: function _search() {\n      var tokenSearchers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var fullSearcher = arguments[1];\n\n      var list = this.list;\n      var resultMap = {};\n      var results = [];\n\n      // Check the first item in the list, if it's a string, then we assume\n      // that every item in the list is also a string, and thus it's a flattened array.\n      if (typeof list[0] === 'string') {\n        // Iterate over every item\n        for (var i = 0, len = list.length; i < len; i += 1) {\n          this._analyze({\n            key: '',\n            value: list[i],\n            record: i,\n            index: i\n          }, {\n            resultMap: resultMap,\n            results: results,\n            tokenSearchers: tokenSearchers,\n            fullSearcher: fullSearcher\n          });\n        }\n\n        return { weights: null, results: results };\n      }\n\n      // Otherwise, the first item is an Object (hopefully), and thus the searching\n      // is done on the values of the keys of each item.\n      var weights = {};\n      for (var _i = 0, _len = list.length; _i < _len; _i += 1) {\n        var item = list[_i];\n        // Iterate over every key\n        for (var j = 0, keysLen = this.options.keys.length; j < keysLen; j += 1) {\n          var key = this.options.keys[j];\n          if (typeof key !== 'string') {\n            weights[key.name] = {\n              weight: 1 - key.weight || 1\n            };\n            if (key.weight <= 0 || key.weight > 1) {\n              throw new Error('Key weight has to be > 0 and <= 1');\n            }\n            key = key.name;\n          } else {\n            weights[key] = {\n              weight: 1\n            };\n          }\n\n          this._analyze({\n            key: key,\n            value: this.options.getFn(item, key),\n            record: item,\n            index: _i\n          }, {\n            resultMap: resultMap,\n            results: results,\n            tokenSearchers: tokenSearchers,\n            fullSearcher: fullSearcher\n          });\n        }\n      }\n\n      return { weights: weights, results: results };\n    }\n  }, {\n    key: '_analyze',\n    value: function _analyze(_ref2, _ref3) {\n      var key = _ref2.key,\n          _ref2$arrayIndex = _ref2.arrayIndex,\n          arrayIndex = _ref2$arrayIndex === undefined ? -1 : _ref2$arrayIndex,\n          value = _ref2.value,\n          record = _ref2.record,\n          index = _ref2.index;\n      var _ref3$tokenSearchers = _ref3.tokenSearchers,\n          tokenSearchers = _ref3$tokenSearchers === undefined ? [] : _ref3$tokenSearchers,\n          _ref3$fullSearcher = _ref3.fullSearcher,\n          fullSearcher = _ref3$fullSearcher === undefined ? [] : _ref3$fullSearcher,\n          _ref3$resultMap = _ref3.resultMap,\n          resultMap = _ref3$resultMap === undefined ? {} : _ref3$resultMap,\n          _ref3$results = _ref3.results,\n          results = _ref3$results === undefined ? [] : _ref3$results;\n\n      // Check if the texvaluet can be searched\n      if (value === undefined || value === null) {\n        return;\n      }\n\n      var exists = false;\n      var averageScore = -1;\n      var numTextMatches = 0;\n\n      if (typeof value === 'string') {\n        this._log('\\nKey: ' + (key === '' ? '-' : key));\n\n        var mainSearchResult = fullSearcher.search(value);\n        this._log('Full text: \"' + value + '\", score: ' + mainSearchResult.score);\n\n        if (this.options.tokenize) {\n          var words = value.split(this.options.tokenSeparator);\n          var scores = [];\n\n          for (var i = 0; i < tokenSearchers.length; i += 1) {\n            var tokenSearcher = tokenSearchers[i];\n\n            this._log('\\nPattern: \"' + tokenSearcher.pattern + '\"');\n\n            // let tokenScores = []\n            var hasMatchInText = false;\n\n            for (var j = 0; j < words.length; j += 1) {\n              var word = words[j];\n              var tokenSearchResult = tokenSearcher.search(word);\n              var obj = {};\n              if (tokenSearchResult.isMatch) {\n                obj[word] = tokenSearchResult.score;\n                exists = true;\n                hasMatchInText = true;\n                scores.push(tokenSearchResult.score);\n              } else {\n                obj[word] = 1;\n                if (!this.options.matchAllTokens) {\n                  scores.push(1);\n                }\n              }\n              this._log('Token: \"' + word + '\", score: ' + obj[word]);\n              // tokenScores.push(obj)\n            }\n\n            if (hasMatchInText) {\n              numTextMatches += 1;\n            }\n          }\n\n          averageScore = scores[0];\n          var scoresLen = scores.length;\n          for (var _i2 = 1; _i2 < scoresLen; _i2 += 1) {\n            averageScore += scores[_i2];\n          }\n          averageScore = averageScore / scoresLen;\n\n          this._log('Token score average:', averageScore);\n        }\n\n        var finalScore = mainSearchResult.score;\n        if (averageScore > -1) {\n          finalScore = (finalScore + averageScore) / 2;\n        }\n\n        this._log('Score average:', finalScore);\n\n        var checkTextMatches = this.options.tokenize && this.options.matchAllTokens ? numTextMatches >= tokenSearchers.length : true;\n\n        this._log('\\nCheck Matches: ' + checkTextMatches);\n\n        // If a match is found, add the item to <rawResults>, including its score\n        if ((exists || mainSearchResult.isMatch) && checkTextMatches) {\n          // Check if the item already exists in our results\n          var existingResult = resultMap[index];\n          if (existingResult) {\n            // Use the lowest score\n            // existingResult.score, bitapResult.score\n            existingResult.output.push({\n              key: key,\n              arrayIndex: arrayIndex,\n              value: value,\n              score: finalScore,\n              matchedIndices: mainSearchResult.matchedIndices\n            });\n          } else {\n            // Add it to the raw result list\n            resultMap[index] = {\n              item: record,\n              output: [{\n                key: key,\n                arrayIndex: arrayIndex,\n                value: value,\n                score: finalScore,\n                matchedIndices: mainSearchResult.matchedIndices\n              }]\n            };\n\n            results.push(resultMap[index]);\n          }\n        }\n      } else if (isArray(value)) {\n        for (var _i3 = 0, len = value.length; _i3 < len; _i3 += 1) {\n          this._analyze({\n            key: key,\n            arrayIndex: _i3,\n            value: value[_i3],\n            record: record,\n            index: index\n          }, {\n            resultMap: resultMap,\n            results: results,\n            tokenSearchers: tokenSearchers,\n            fullSearcher: fullSearcher\n          });\n        }\n      }\n    }\n  }, {\n    key: '_computeScore',\n    value: function _computeScore(weights, results) {\n      this._log('\\n\\nComputing score:\\n');\n\n      for (var i = 0, len = results.length; i < len; i += 1) {\n        var output = results[i].output;\n        var scoreLen = output.length;\n\n        var totalScore = 0;\n        var bestScore = 1;\n\n        for (var j = 0; j < scoreLen; j += 1) {\n          var weight = weights ? weights[output[j].key].weight : 1;\n          var score = weight === 1 ? output[j].score : output[j].score || 0.001;\n          var nScore = score * weight;\n\n          if (weight !== 1) {\n            bestScore = Math.min(bestScore, nScore);\n          } else {\n            output[j].nScore = nScore;\n            totalScore += nScore;\n          }\n        }\n\n        results[i].score = bestScore === 1 ? totalScore / scoreLen : bestScore;\n\n        this._log(results[i]);\n      }\n    }\n  }, {\n    key: '_sort',\n    value: function _sort(results) {\n      this._log('\\n\\nSorting....');\n      results.sort(this.options.sortFn);\n    }\n  }, {\n    key: '_format',\n    value: function _format(results) {\n      var finalOutput = [];\n\n      this._log('\\n\\nOutput:\\n\\n', JSON.stringify(results));\n\n      var transformers = [];\n\n      if (this.options.includeMatches) {\n        transformers.push(function (result, data) {\n          var output = result.output;\n          data.matches = [];\n\n          for (var i = 0, len = output.length; i < len; i += 1) {\n            var item = output[i];\n\n            if (item.matchedIndices.length === 0) {\n              continue;\n            }\n\n            var obj = {\n              indices: item.matchedIndices,\n              value: item.value\n            };\n            if (item.key) {\n              obj.key = item.key;\n            }\n            if (item.hasOwnProperty('arrayIndex') && item.arrayIndex > -1) {\n              obj.arrayIndex = item.arrayIndex;\n            }\n            data.matches.push(obj);\n          }\n        });\n      }\n\n      if (this.options.includeScore) {\n        transformers.push(function (result, data) {\n          data.score = result.score;\n        });\n      }\n\n      for (var i = 0, len = results.length; i < len; i += 1) {\n        var result = results[i];\n\n        if (this.options.id) {\n          result.item = this.options.getFn(result.item, this.options.id)[0];\n        }\n\n        if (!transformers.length) {\n          finalOutput.push(result.item);\n          continue;\n        }\n\n        var data = {\n          item: result.item\n        };\n\n        for (var j = 0, _len2 = transformers.length; j < _len2; j += 1) {\n          transformers[j](result, data);\n        }\n\n        finalOutput.push(data);\n      }\n\n      return finalOutput;\n    }\n  }, {\n    key: '_log',\n    value: function _log() {\n      if (this.options.verbose) {\n        var _console;\n\n        (_console = console).log.apply(_console, arguments);\n      }\n    }\n  }]);\n\n  return Fuse;\n}();\n\nmodule.exports = Fuse;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=fuse.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fuse.js/dist/fuse.js\n// module id = 7\n// module chunks = 0","import { createStore } from 'redux';\nimport rootReducer from './../reducers/index';\n\nexport default class Store {\n  constructor() {\n    this.store = createStore(\n      rootReducer,\n      window.devToolsExtension ?\n        window.devToolsExtension() :\n        undefined,\n    );\n  }\n\n  /**\n   * Subscribe store to function call (wrapped Redux method)\n   * @param  {Function} onChange Function to trigger when state changes\n   * @return\n   */\n  subscribe(onChange) {\n    this.store.subscribe(onChange);\n  }\n\n  /**\n   * Dispatch event to store (wrapped Redux method)\n   * @param  {Function} action Action function to trigger\n   * @return\n   */\n  dispatch(action) {\n    this.store.dispatch(action);\n  }\n\n  /**\n   * Get store object (wrapping Redux method)\n   * @return {Object} State\n   */\n  getState() {\n    return this.store.getState();\n  }\n\n  /**\n   * Get items from store\n   * @return {Array} Item objects\n   */\n  getItems() {\n    const state = this.store.getState();\n    return state.items;\n  }\n\n  /**\n   * Get active items from store\n   * @return {Array} Item objects\n   */\n  getItemsFilteredByActive() {\n    const items = this.getItems();\n    const values = items.filter(item => item.active === true);\n\n    return values;\n  }\n\n  /**\n  * Get highlighted items from store\n  * @return {Array} Item objects\n  */\n  getItemsFilteredByHighlighted() {\n    const items = this.getItems();\n    const values = items.filter(item => item.active && item.highlighted);\n\n    return values;\n  }\n\n  /**\n   * Get items from store reduced to just their values\n   * @return {Array} Item objects\n   */\n  getItemsReducedToValues(items = this.getItems()) {\n    const values = items.reduce((prev, current) => {\n      prev.push(current.value);\n      return prev;\n    }, []);\n\n    return values;\n  }\n\n  /**\n   * Get choices from store\n   * @return {Array} Option objects\n   */\n  getChoices() {\n    const state = this.store.getState();\n    return state.choices;\n  }\n\n  /**\n   * Get active choices from store\n   * @return {Array} Option objects\n   */\n  getChoicesFilteredByActive() {\n    const choices = this.getChoices();\n    const values = choices.filter(choice => choice.active === true);\n\n    return values;\n  }\n\n  /**\n   * Get selectable choices from store\n   * @return {Array} Option objects\n   */\n  getChoicesFilteredBySelectable() {\n    const choices = this.getChoices();\n    const values = choices.filter(choice => choice.disabled !== true);\n\n    return values;\n  }\n\n  /**\n   * Get choices that can be searched (excluding placeholders)\n   * @return {Array} Option objects\n   */\n  getSearchableChoices() {\n    const filtered = this.getChoicesFilteredBySelectable();\n    return filtered.filter(choice => choice.placeholder !== true);\n  }\n\n  /**\n   * Get single choice by it's ID\n   * @return {Object} Found choice\n   */\n  getChoiceById(id) {\n    if (id) {\n      const choices = this.getChoicesFilteredByActive();\n      const foundChoice = choices.find(choice => choice.id === parseInt(id, 10));\n      return foundChoice;\n    }\n    return false;\n  }\n\n  /**\n   * Get placeholder choice from store\n   * @return {Object} Found placeholder\n   */\n  getPlaceholderChoice() {\n    const choices = this.getChoices();\n    const placeholderChoice = [...choices]\n      .reverse()\n      .find(choice => choice.placeholder === true);\n\n    return placeholderChoice;\n  }\n\n  /**\n   * Get groups from store\n   * @return {Array} Group objects\n   */\n  getGroups() {\n    const state = this.store.getState();\n    return state.groups;\n  }\n\n  /**\n   * Get active groups from store\n   * @return {Array} Group objects\n   */\n  getGroupsFilteredByActive() {\n    const groups = this.getGroups();\n    const choices = this.getChoices();\n\n    const values = groups.filter((group) => {\n      const isActive = group.active === true && group.disabled === false;\n      const hasActiveOptions = choices.some(choice =>\n        choice.active === true && choice.disabled === false,\n      );\n      return isActive && hasActiveOptions;\n    }, []);\n\n    return values;\n  }\n\n  /**\n   * Get group by group id\n   * @param  {Number} id Group ID\n   * @return {Object}    Group data\n   */\n  getGroupById(id) {\n    const groups = this.getGroups();\n    const foundGroup = groups.find(group => group.id === parseInt(id, 10));\n\n    return foundGroup;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/scripts/src/store/store.js","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash-es/_freeGlobal.js\n// module id = 9\n// module chunks = 0","module.exports = require('./lib/index');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/symbol-observable/index.js\n// module id = 10\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ponyfill = require('./ponyfill.js');\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root; /* global window */\n\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/symbol-observable/lib/index.js\n// module id = 11\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 12\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/symbol-observable/lib/ponyfill.js\n// module id = 13\n// module chunks = 0","import { combineReducers } from 'redux';\nimport items from './items';\nimport groups from './groups';\nimport choices from './choices';\n\nconst appReducer = combineReducers({\n  items,\n  groups,\n  choices,\n});\n\nconst rootReducer = (passedState, action) => {\n  let state = passedState;\n  // If we are clearing all items, groups and options we reassign\n  // state and then pass that state to our proper reducer. This isn't\n  // mutating our actual state\n  // See: http://stackoverflow.com/a/35641992\n  if (action.type === 'CLEAR_ALL') {\n    state = undefined;\n  }\n\n  return appReducer(state, action);\n};\n\nexport default rootReducer;\n\n\n\n// WEBPACK FOOTER //\n// src/scripts/src/reducers/index.js","export const defaultState = [];\n\nexport default function items(state = defaultState, action) {\n  switch (action.type) {\n    case 'ADD_ITEM': {\n      // Add object to items array\n      const newState = [...state, {\n        id: action.id,\n        choiceId: action.choiceId,\n        groupId: action.groupId,\n        value: action.value,\n        label: action.label,\n        active: true,\n        highlighted: false,\n        customProperties: action.customProperties,\n        placeholder: (action.placeholder || false),\n        keyCode: null,\n      }];\n\n      return newState.map((obj) => {\n        const item = obj;\n        if (item.highlighted) {\n          item.highlighted = false;\n        }\n        return item;\n      });\n    }\n\n    case 'REMOVE_ITEM': {\n      // Set item to inactive\n      return state.map((obj) => {\n        const item = obj;\n        if (item.id === action.id) {\n          item.active = false;\n        }\n        return item;\n      });\n    }\n\n    case 'HIGHLIGHT_ITEM': {\n      return state.map((obj) => {\n        const item = obj;\n        if (item.id === action.id) {\n          item.highlighted = action.highlighted;\n        }\n        return item;\n      });\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/scripts/src/reducers/items.js","export const defaultState = [];\n\nexport default function groups(state = defaultState, action) {\n  switch (action.type) {\n    case 'ADD_GROUP': {\n      return [...state, {\n        id: action.id,\n        value: action.value,\n        active: action.active,\n        disabled: action.disabled,\n      }];\n    }\n\n    case 'CLEAR_CHOICES': {\n      return [];\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/scripts/src/reducers/groups.js","export const defaultState = [];\n\nexport default function choices(state = defaultState, action) {\n  switch (action.type) {\n    case 'ADD_CHOICE': {\n      /*\n          A disabled choice appears in the choice dropdown but cannot be selected\n          A selected choice has been added to the passed input's value (added as an item)\n          An active choice appears within the choice dropdown\n       */\n      return [...state, {\n        id: action.id,\n        elementId: action.elementId,\n        groupId: action.groupId,\n        value: action.value,\n        label: (action.label || action.value),\n        disabled: (action.disabled || false),\n        selected: false,\n        active: true,\n        score: 9999,\n        customProperties: action.customProperties,\n        placeholder: (action.placeholder || false),\n        keyCode: null,\n      }];\n    }\n\n    case 'ADD_ITEM': {\n      // If all choices need to be activated\n      if (action.activateOptions) {\n        return state.map((obj) => {\n          const choice = obj;\n          choice.active = action.active;\n          return choice;\n        });\n      }\n\n      // When an item is added and it has an associated choice,\n      // we want to disable it so it can't be chosen again\n      if (action.choiceId > -1) {\n        return state.map((obj) => {\n          const choice = obj;\n          if (choice.id === parseInt(action.choiceId, 10)) {\n            choice.selected = true;\n          }\n          return choice;\n        });\n      }\n\n      return state;\n    }\n\n    case 'REMOVE_ITEM': {\n      // When an item is removed and it has an associated choice,\n      // we want to re-enable it so it can be chosen again\n      if (action.choiceId > -1) {\n        return state.map((obj) => {\n          const choice = obj;\n          if (choice.id === parseInt(action.choiceId, 10)) {\n            choice.selected = false;\n          }\n          return choice;\n        });\n      }\n\n      return state;\n    }\n\n    case 'FILTER_CHOICES': {\n      return state.map((obj) => {\n        const choice = obj;\n        // Set active state based on whether choice is\n        // within filtered results\n        choice.active = action.results.some(({ item, score }) => {\n          if (item.id === choice.id) {\n            choice.score = score;\n            return true;\n          }\n          return false;\n        });\n\n        return choice;\n      });\n    }\n\n    case 'ACTIVATE_CHOICES': {\n      return state.map((obj) => {\n        const choice = obj;\n        choice.active = action.active;\n        return choice;\n      });\n    }\n\n    case 'CLEAR_CHOICES': {\n      return defaultState;\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/scripts/src/reducers/choices.js","export default class Dropdown {\n  constructor(instance, element, classNames) {\n    this.parentInstance = instance;\n    this.element = element;\n    this.classNames = classNames;\n    this.dimensions = null;\n    this.position = null;\n    this.isActive = false;\n  }\n\n  getElement() {\n    return this.element;\n  }\n\n  /**\n   * Determine how far the top of our element is from\n   * the top of the window\n   * @return {Number} Vertical position\n   */\n  getVerticalPos() {\n    this.dimensions = this.element.getBoundingClientRect();\n    this.position = Math.ceil(this.dimensions.top + window.pageYOffset + this.element.offsetHeight);\n    return this.position;\n  }\n\n  /**\n   * Find element that matches passed selector\n   * @return {HTMLElement}\n   */\n  getChild(selector) {\n    return this.element.querySelector(selector);\n  }\n\n  /**\n   * Show dropdown to user by adding active state class\n   * @return {Object} Class instance\n   * @public\n   */\n  show() {\n    this.element.classList.add(this.classNames.activeState);\n    this.element.setAttribute('aria-expanded', 'true');\n    this.isActive = true;\n    return this.parentInstance;\n  }\n\n  /**\n   * Hide dropdown from user\n   * @return {Object} Class instance\n   * @public\n   */\n  hide() {\n    this.element.classList.remove(this.classNames.activeState);\n    this.element.setAttribute('aria-expanded', 'false');\n    this.isActive = false;\n    return this.parentInstance;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/scripts/src/components/dropdown.js","export default class Container {\n  constructor(instance, element, classNames) {\n    this.parentInstance = instance;\n    this.element = element;\n    this.classNames = classNames;\n    this.config = instance.config;\n    this.isOpen = false;\n    this.isFlipped = false;\n    this.isFocussed = false;\n    this.isDisabled = false;\n    this.isLoading = false;\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n  }\n\n  getElement() {\n    return this.element;\n  }\n\n  /**\n   * Add event listeners\n  */\n  addEventListeners() {\n    this.element.addEventListener('focus', this.onFocus);\n    this.element.addEventListener('blur', this.onBlur);\n  }\n\n  /**\n   * Remove event listeners\n  */\n\n  /** */\n  removeEventListeners() {\n    this.element.removeEventListener('focus', this.onFocus);\n    this.element.removeEventListener('blur', this.onBlur);\n  }\n\n  /**\n   * Set focussed state\n   */\n  onFocus() {\n    this.isFocussed = true;\n  }\n\n  /**\n   * Remove blurred state\n   */\n  onBlur() {\n    this.isFocussed = false;\n  }\n\n  /**\n   * Determine whether container should be flipped\n   * based on passed dropdown position\n   * @param {Number} dropdownPos\n   * @returns\n   */\n  shouldFlip(dropdownPos) {\n    if (dropdownPos === undefined) {\n      return false;\n    }\n\n    const body = document.body;\n    const html = document.documentElement;\n    const winHeight = Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight,\n    );\n\n    // If flip is enabled and the dropdown bottom position is\n    // greater than the window height flip the dropdown.\n    let shouldFlip = false;\n    if (this.config.position === 'auto') {\n      shouldFlip = dropdownPos >= winHeight;\n    } else if (this.config.position === 'top') {\n      shouldFlip = true;\n    }\n\n    return shouldFlip;\n  }\n\n  /**\n   * Set active descendant attribute\n   * @param {Number} activeDescendant ID of active descendant\n   */\n  setActiveDescendant(activeDescendantID) {\n    this.element.setAttribute('aria-activedescendant', activeDescendantID);\n  }\n\n  /**\n   * Remove active descendant attribute\n   */\n  removeActiveDescendant() {\n    this.element.removeAttribute('aria-activedescendant');\n  }\n\n  open(dropdownPos) {\n    this.element.classList.add(this.classNames.openState);\n    this.element.setAttribute('aria-expanded', 'true');\n    this.isOpen = true;\n\n    if (this.shouldFlip(dropdownPos)) {\n      this.element.classList.add(this.classNames.flippedState);\n      this.isFlipped = true;\n    }\n  }\n\n  close() {\n    this.element.classList.remove(this.classNames.openState);\n    this.element.setAttribute('aria-expanded', 'false');\n    this.removeActiveDescendant();\n    this.isOpen = false;\n\n    // A dropdown flips if it does not have space within the page\n    if (this.isFlipped) {\n      this.element.classList.remove(this.classNames.flippedState);\n      this.isFlipped = false;\n    }\n  }\n\n  focus() {\n    if (!this.isFocussed) {\n      this.element.focus();\n    }\n  }\n\n  addFocusState() {\n    this.element.classList.add(this.classNames.focusState);\n  }\n\n  removeFocusState() {\n    this.element.classList.remove(this.classNames.focusState);\n  }\n\n  /**\n   * Remove disabled state\n   */\n  enable() {\n    this.element.classList.remove(this.config.classNames.disabledState);\n    this.element.removeAttribute('aria-disabled');\n    if (this.parentInstance.isSelectOneElement) {\n      this.element.setAttribute('tabindex', '0');\n    }\n    this.isDisabled = false;\n  }\n\n  /**\n   * Set disabled state\n   */\n  disable() {\n    this.element.classList.add(this.config.classNames.disabledState);\n    this.element.setAttribute('aria-disabled', 'true');\n    if (this.parentInstance.isSelectOneElement) {\n      this.element.setAttribute('tabindex', '-1');\n    }\n    this.isDisabled = true;\n  }\n\n  revert(originalElement) {\n    // Move passed element back to original position\n    this.element.parentNode.insertBefore(\n      originalElement,\n      this.element,\n    );\n    // Remove container\n    this.element.parentNode.removeChild(this.element);\n  }\n\n  /**\n   * Add loading state to element\n   */\n  addLoadingState() {\n    this.element.classList.add(this.classNames.loadingState);\n    this.element.setAttribute('aria-busy', 'true');\n    this.isLoading = true;\n  }\n\n  /**\n   * Remove loading state from element\n   */\n  removeLoadingState() {\n    this.element.classList.remove(this.classNames.loadingState);\n    this.element.removeAttribute('aria-busy');\n    this.isLoading = false;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/scripts/src/components/container.js","import { getWidthOfInput } from '../lib/utils';\n\nexport default class Input {\n  constructor(instance, element, classNames) {\n    this.parentInstance = instance;\n    this.element = element;\n    this.classNames = classNames;\n    this.isFocussed = this.element === document.activeElement;\n    this.isDisabled = false;\n\n    // Bind event listeners\n    this.onPaste = this.onPaste.bind(this);\n    this.onInput = this.onInput.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n  }\n\n  getElement() {\n    return this.element;\n  }\n\n  addEventListeners() {\n    this.element.addEventListener('input', this.onInput);\n    this.element.addEventListener('paste', this.onPaste);\n    this.element.addEventListener('focus', this.onFocus);\n    this.element.addEventListener('blur', this.onBlur);\n  }\n\n  removeEventListeners() {\n    this.element.removeEventListener('input', this.onInput);\n    this.element.removeEventListener('paste', this.onPaste);\n    this.element.removeEventListener('focus', this.onFocus);\n    this.element.removeEventListener('blur', this.onBlur);\n  }\n\n  /**\n   * Input event\n   * @return\n   * @private\n   */\n  onInput() {\n    if (!this.parentInstance.isSelectOneElement) {\n      this.setWidth();\n    }\n  }\n\n  /**\n   * Paste event\n   * @param  {Object} e Event\n   * @return\n   * @private\n   */\n  onPaste(e) {\n    // Disable pasting into the input if option has been set\n    if (e.target === this.element && !this.parentInstance.config.paste) {\n      e.preventDefault();\n    }\n  }\n\n  /**\n   * Set focussed state\n   */\n  onFocus() {\n    this.isFocussed = true;\n  }\n\n  /**\n   * Remove focussed state\n   */\n  onBlur() {\n    this.isFocussed = false;\n  }\n\n  activate(focusInput) {\n    // Optionally focus the input if we have a search input\n    if (focusInput && this.parentInstance.canSearch && document.activeElement !== this.element) {\n      this.element.focus();\n    }\n  }\n\n  deactivate(blurInput) {\n    this.removeActiveDescendant();\n    // Optionally blur the input if we have a search input\n    if (blurInput && this.parentInstance.canSearch && document.activeElement === this.element) {\n      this.element.blur();\n    }\n  }\n\n  enable() {\n    this.element.removeAttribute('disabled');\n    this.isDisabled = false;\n  }\n\n  disable() {\n    this.element.setAttribute('disabled', '');\n    this.isDisabled = true;\n  }\n\n  focus() {\n    if (!this.isFocussed) {\n      this.element.focus();\n    }\n  }\n\n  /**\n   * Set value of input to blank\n   * @return {Object} Class instance\n   * @public\n   */\n  clear(setWidth = true) {\n    if (this.element.value) {\n      this.element.value = '';\n    }\n\n    if (setWidth) {\n      this.setWidth();\n    }\n\n    return this.parentInstance;\n  }\n\n  /**\n   * Set the correct input width based on placeholder\n   * value or input value\n   * @return\n   */\n  setWidth(enforceWidth) {\n    if (this.parentInstance.placeholder) {\n      // If there is a placeholder, we only want to set the width of the input when it is a greater\n      // length than 75% of the placeholder. This stops the input jumping around.\n      if (\n        (this.element.value &&\n        this.element.value.length >= (this.parentInstance.placeholder.length / 1.25)) ||\n        enforceWidth\n      ) {\n        this.element.style.width = this.getWidth();\n      }\n    } else {\n      // If there is no placeholder, resize input to contents\n      this.element.style.width = this.getWidth();\n    }\n  }\n\n  getWidth() {\n    return getWidthOfInput(this.element);\n  }\n\n  setPlaceholder(placeholder) {\n    this.element.placeholder = placeholder;\n  }\n\n  setValue(value) {\n    this.element.value = value;\n  }\n\n  getValue() {\n    return this.element.value;\n  }\n\n  setActiveDescendant(activeDescendantID) {\n    this.element.setAttribute('aria-activedescendant', activeDescendantID);\n  }\n\n  removeActiveDescendant() {\n    this.element.removeAttribute('aria-activedescendant');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/scripts/src/components/input.js","export default class List {\n  constructor(instance, element, classNames) {\n    this.parentInstance = instance;\n    this.element = element;\n    this.classNames = classNames;\n    this.scrollPos = this.element.scrollTop;\n    this.height = this.element.offsetHeight;\n    this.hasChildren = !!this.element.children;\n  }\n\n  getElement() {\n    return this.element;\n  }\n\n  /**\n   * Clear List contents\n   */\n  clear() {\n    this.element.innerHTML = '';\n  }\n\n  /**\n   * Scroll to passed position on Y axis\n   */\n  scrollTo(scrollPos = 0) {\n    this.element.scrollTop = scrollPos;\n  }\n  /**\n   * Append node to element\n   */\n  append(node) {\n    this.element.appendChild(node);\n  }\n\n  /**\n   * Find element that matches passed selector\n   * @return {HTMLElement}\n  */\n  getChild(selector) {\n    return this.element.querySelector(selector);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/scripts/src/components/list.js","import WrappedElement from './wrapped-element';\n\nexport default class WrappedInput extends WrappedElement {\n  constructor(instance, element, classNames) {\n    super(instance, element, classNames);\n    this.parentInstance = instance;\n    this.element = element;\n    this.classNames = classNames;\n  }\n\n  getElement() {\n    super.getElement();\n  }\n\n  conceal() {\n    super.conceal();\n  }\n\n  reveal() {\n    super.reveal();\n  }\n\n  enable() {\n    super.enable();\n  }\n\n  disable() {\n    super.enable();\n  }\n\n  setValue(value) {\n    this.element.setAttribute('value', value);\n    this.element.value = value;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/scripts/src/components/wrapped-input.js","import WrappedElement from './wrapped-element';\n\nexport default class WrappedSelect extends WrappedElement {\n  constructor(instance, element, classNames) {\n    super(instance, element, classNames);\n    this.parentInstance = instance;\n    this.element = element;\n    this.classNames = classNames;\n  }\n\n  getElement() {\n    super.getElement();\n  }\n\n  conceal() {\n    super.conceal();\n  }\n\n  reveal() {\n    super.reveal();\n  }\n\n  enable() {\n    super.enable();\n  }\n\n  disable() {\n    super.enable();\n  }\n\n  setOptions(options) {\n    this.element.innerHTML = '';\n    this.element.appendChild(options);\n  }\n\n  getPlaceholderOption() {\n    return this.element.querySelector('option[placeholder]');\n  }\n\n  getOptions() {\n    return Array.from(this.element.options);\n  }\n\n  getOptionGroups() {\n    return Array.from(this.element.getElementsByTagName('OPTGROUP'));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// src/scripts/src/components/wrapped-select.js","import classNames from 'classnames';\nimport { strToEl } from './lib/utils';\n\nexport const TEMPLATES = {\n  containerOuter(\n    globalClasses,\n    direction,\n    isSelectElement,\n    isSelectOneElement,\n    searchEnabled,\n    passedElementType,\n  ) {\n    const tabIndex = isSelectOneElement ? 'tabindex=\"0\"' : '';\n    let role = isSelectElement ? 'role=\"listbox\"' : '';\n    let ariaAutoComplete = '';\n\n    if (isSelectElement && searchEnabled) {\n      role = 'role=\"combobox\"';\n      ariaAutoComplete = 'aria-autocomplete=\"list\"';\n    }\n\n    return strToEl(`\n      <div\n        class=\"${globalClasses.containerOuter}\"\n        data-type=\"${passedElementType}\"\n        ${role}\n        ${tabIndex}\n        ${ariaAutoComplete}\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        dir=\"${direction}\"\n        >\n      </div>\n    `);\n  },\n  containerInner(globalClasses) {\n    return strToEl(`\n      <div class=\"${globalClasses.containerInner}\"></div>\n    `);\n  },\n  itemList(globalClasses, isSelectOneElement) {\n    const localClasses = classNames(\n      globalClasses.list, {\n        [globalClasses.listSingle]: (isSelectOneElement),\n        [globalClasses.listItems]: (!isSelectOneElement),\n      },\n    );\n\n    return strToEl(`\n      <div class=\"${localClasses}\"></div>\n    `);\n  },\n  placeholder(globalClasses, value) {\n    return strToEl(`\n      <div class=\"${globalClasses.placeholder}\">\n        ${value}\n      </div>\n    `);\n  },\n  item(globalClasses, data, removeItemButton) {\n    const ariaSelected = data.active ? 'aria-selected=\"true\"' : '';\n    const ariaDisabled = data.disabled ? 'aria-disabled=\"true\"' : '';\n\n    let localClasses = classNames(\n      globalClasses.item, {\n        [globalClasses.highlightedState]: data.highlighted,\n        [globalClasses.itemSelectable]: !data.highlighted,\n        [globalClasses.placeholder]: data.placeholder,\n      },\n    );\n\n    if (removeItemButton) {\n      localClasses = classNames(\n        globalClasses.item, {\n          [globalClasses.highlightedState]: data.highlighted,\n          [globalClasses.itemSelectable]: !data.disabled,\n          [globalClasses.placeholder]: data.placeholder,\n        },\n      );\n\n      return strToEl(`\n        <div\n          class=\"${localClasses}\"\n          data-item\n          data-id=\"${data.id}\"\n          data-value=\"${data.value}\"\n          data-deletable\n          ${ariaSelected}\n          ${ariaDisabled}\n          >\n          ${data.label}<!--\n       --><button\n            type=\"button\"\n            class=\"${globalClasses.button}\"\n            data-button\n            aria-label=\"Remove item: '${data.value}'\"\n            >\n            Remove item\n          </button>\n        </div>\n      `);\n    }\n\n    return strToEl(`\n      <div\n        class=\"${localClasses}\"\n        data-item\n        data-id=\"${data.id}\"\n        data-value=\"${data.value}\"\n        ${ariaSelected}\n        ${ariaDisabled}\n        >\n        ${data.label}\n      </div>\n    `);\n  },\n  choiceList(globalClasses, isSelectOneElement) {\n    const ariaMultiSelectable = !isSelectOneElement ?\n      'aria-multiselectable=\"true\"' :\n      '';\n\n    return strToEl(`\n      <div\n        class=\"${globalClasses.list}\"\n        dir=\"ltr\"\n        role=\"listbox\"\n        ${ariaMultiSelectable}\n        >\n      </div>\n    `);\n  },\n  choiceGroup(globalClasses, data) {\n    const ariaDisabled = data.disabled ? 'aria-disabled=\"true\"' : '';\n    const localClasses = classNames(\n      globalClasses.group, {\n        [globalClasses.itemDisabled]: data.disabled,\n      },\n    );\n\n    return strToEl(`\n      <div\n        class=\"${localClasses}\"\n        data-group\n        data-id=\"${data.id}\"\n        data-value=\"${data.value}\"\n        role=\"group\"\n        ${ariaDisabled}\n        >\n        <div class=\"${globalClasses.groupHeading}\">${data.value}</div>\n      </div>\n    `);\n  },\n  choice(globalClasses, data, itemSelectText) {\n    const role = data.groupId > 0 ? 'role=\"treeitem\"' : 'role=\"option\"';\n    const localClasses = classNames(\n      globalClasses.item,\n      globalClasses.itemChoice, {\n        [globalClasses.itemDisabled]: data.disabled,\n        [globalClasses.itemSelectable]: !data.disabled,\n        [globalClasses.placeholder]: data.placeholder,\n      },\n    );\n\n    return strToEl(`\n      <div\n        class=\"${localClasses}\"\n        data-select-text=\"${itemSelectText}\"\n        data-choice\n        data-id=\"${data.id}\"\n        data-value=\"${data.value}\"\n        ${data.disabled ?\n          'data-choice-disabled aria-disabled=\"true\"' :\n          'data-choice-selectable'\n        }\n        id=\"${data.elementId}\"\n        ${role}\n        >\n        ${data.label}\n      </div>\n    `);\n  },\n  input(globalClasses) {\n    const localClasses = classNames(\n      globalClasses.input,\n      globalClasses.inputCloned,\n    );\n\n    return strToEl(`\n      <input\n        type=\"text\"\n        class=\"${localClasses}\"\n        autocomplete=\"off\"\n        autocapitalize=\"off\"\n        spellcheck=\"false\"\n        role=\"textbox\"\n        aria-autocomplete=\"list\"\n        >\n    `);\n  },\n  dropdown(globalClasses) {\n    const localClasses = classNames(\n      globalClasses.list,\n      globalClasses.listDropdown,\n    );\n\n    return strToEl(`\n      <div\n        class=\"${localClasses}\"\n        aria-expanded=\"false\"\n        >\n      </div>\n    `);\n  },\n  notice(globalClasses, label, type = '') {\n    const localClasses = classNames(\n      globalClasses.item,\n      globalClasses.itemChoice, {\n        [globalClasses.noResults]: (type === 'no-results'),\n        [globalClasses.noChoices]: (type === 'no-choices'),\n      },\n    );\n\n    return strToEl(`\n      <div class=\"${localClasses}\">\n        ${label}\n      </div>\n    `);\n  },\n  option(globalClasses, data) {\n    return strToEl(`\n      <option value=\"${data.value}\" selected>${data.label}</option>\n    `);\n  },\n};\n\nexport default TEMPLATES;\n\n\n\n// WEBPACK FOOTER //\n// src/scripts/src/templates.js","/*!\n  Copyright (c) 2016 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/classnames/index.js\n// module id = 25\n// module chunks = 0","import { ACTION_TYPES } from './../constants';\n\nexport const addChoice = (\n  value,\n  label,\n  id,\n  groupId,\n  disabled,\n  elementId,\n  customProperties,\n  placeholder,\n  keyCode,\n) => ({\n  type: ACTION_TYPES.ADD_CHOICE,\n  value,\n  label,\n  id,\n  groupId,\n  disabled,\n  elementId,\n  customProperties,\n  placeholder,\n  keyCode,\n});\n\nexport const filterChoices = results => ({\n  type: ACTION_TYPES.FILTER_CHOICES,\n  results,\n});\n\nexport const activateChoices = (active = true) => ({\n  type: ACTION_TYPES.ACTIVATE_CHOICES,\n  active,\n});\n\nexport const clearChoices = () => ({\n  type: ACTION_TYPES.CLEAR_CHOICES,\n});\n\n\n\n// WEBPACK FOOTER //\n// src/scripts/src/actions/choices.js","import { ACTION_TYPES } from './../constants';\n\nexport const addItem = (\n  value,\n  label,\n  id,\n  choiceId,\n  groupId,\n  customProperties,\n  placeholder,\n  keyCode,\n) => ({\n  type: ACTION_TYPES.ADD_ITEM,\n  value,\n  label,\n  id,\n  choiceId,\n  groupId,\n  customProperties,\n  placeholder,\n  keyCode,\n});\n\nexport const removeItem = (id, choiceId) => ({\n  type: ACTION_TYPES.REMOVE_ITEM,\n  id,\n  choiceId,\n});\n\nexport const highlightItem = (id, highlighted) => ({\n  type: ACTION_TYPES.HIGHLIGHT_ITEM,\n  id,\n  highlighted,\n});\n\n\n\n// WEBPACK FOOTER //\n// src/scripts/src/actions/items.js","import { ACTION_TYPES } from './../constants';\n\n/* eslint-disable import/prefer-default-export */\nexport const addGroup = (value, id, active, disabled) => ({\n  type: ACTION_TYPES.ADD_GROUP,\n  value,\n  id,\n  active,\n  disabled,\n});\n\n\n\n// WEBPACK FOOTER //\n// src/scripts/src/actions/groups.js","/* eslint-disable import/prefer-default-export */\nexport const clearAll = () => ({\n  type: 'CLEAR_ALL',\n});\n\n\n\n// WEBPACK FOOTER //\n// src/scripts/src/actions/misc.js","/* eslint-disable */\n(function () {\n  // Production steps of ECMA-262, Edition 6, 22.1.2.1\n  // Reference: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.from\n  if (!Array.from) {\n    Array.from = (function() {\n      let toStr = Object.prototype.toString;\n\n      let isCallable = function(fn) {\n        return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n      };\n\n      let toInteger = function(value) {\n        let number = Number(value);\n        if (isNaN(number)) {\n          return 0;\n        }\n        if (number === 0 || !isFinite(number)) {\n          return number;\n        }\n        return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n      };\n\n      let maxSafeInteger = Math.pow(2, 53) - 1;\n\n      let toLength = function(value) {\n        let len = toInteger(value);\n        return Math.min(Math.max(len, 0), maxSafeInteger);\n      };\n\n      // The length property of the from method is 1.\n      return function from(arrayLike /* , mapFn, thisArg */) {\n        // 1. Let C be the this value.\n        let C = this;\n\n        // 2. Let items be ToObject(arrayLike).\n        let items = Object(arrayLike);\n\n        // 3. ReturnIfAbrupt(items).\n        if (arrayLike == null) {\n          throw new TypeError('Array.from requires an array-like object - not null or undefined');\n        }\n\n        // 4. If mapfn is undefined, then let mapping be false.\n        let mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n        let T;\n        if (typeof mapFn !== 'undefined') {\n          // 5. else\n          // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n          if (!isCallable(mapFn)) {\n            throw new TypeError('Array.from: when provided, the second argument must be a function');\n          }\n\n          // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n          if (arguments.length > 2) {\n            T = arguments[2];\n          }\n        }\n\n        // 10. Let lenValue be Get(items, \"length\").\n        // 11. Let len be ToLength(lenValue).\n        let len = toLength(items.length);\n\n        // 13. If IsConstructor(C) is true, then\n        // 13. a. Let A be the result of calling the [[Construct]] internal method of C with an argument list containing the single item len.\n        // 14. a. Else, Let A be ArrayCreate(len).\n        let A = isCallable(C) ? Object(new C(len)) : new Array(len);\n\n        // 16. Let k be 0.\n        let k = 0;\n        // 17. Repeat, while k < len… (also steps a - h)\n        let kValue;\n        while (k < len) {\n          kValue = items[k];\n          if (mapFn) {\n            A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n          } else {\n            A[k] = kValue;\n          }\n          k += 1;\n        }\n        // 18. Let putStatus be Put(A, \"length\", len, true).\n        A.length = len;\n        // 20. Return A.\n        return A;\n      };\n    }());\n  }\n\n  // Reference: https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n  if (!Array.prototype.find) {\n    Array.prototype.find = function(predicate) {\n      'use strict';\n\n      if (this == null) {\n        throw new TypeError('Array.prototype.find called on null or undefined');\n      }\n      if (typeof predicate !== 'function') {\n        throw new TypeError('predicate must be a function');\n      }\n      let list = Object(this);\n      let length = list.length >>> 0;\n      let thisArg = arguments[1];\n      let value;\n\n      for (let i = 0; i < length; i++) {\n        value = list[i];\n        if (predicate.call(thisArg, value, i, list)) {\n          return value;\n        }\n      }\n      return undefined;\n    };\n  }\n\n  function CustomEvent (event, params) {\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined,\n    };\n    let evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return evt;\n  }\n\n  CustomEvent.prototype = window.Event.prototype;\n\n  window.CustomEvent = CustomEvent;\n}());\n\n\n\n// WEBPACK FOOTER //\n// src/scripts/src/lib/polyfills.js"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;;;;;AAKA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AAAA;AAAA;AACA;AAIA;;;;;AAKA;AAAA;AAEA;AAFA;AACA;AAIA;;;;;AAKA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AAAA;AAAA;AACA;AACA;;;;;;;AAOA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AACA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AAtCA;AACA;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAWA;;;;;;;;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/CA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACpBA;AACA;;;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;;;;AA5EA;;;;;;;;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAcA;AACA;;;;;;;;;AACA;;;AAGA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAQA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAtBA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AAAA;AACA;AA8BA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;;;;;;;;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AASA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AAEA;;;;;;;;;;AAOA;AACA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAQA;AAAA;AACA;AADA;AACA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;AAOA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;;;;;AAKA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AACA;AAsBA;AACA;AACA;AACA;;;;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BA;AACA;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAOA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAWA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAYA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;AACA;AASA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AAGA;AACA;AACA;;;;;;;;;;;;AASA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;;;;;;;;;;AAOA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAQA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAxCA;AACA;AA0CA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;;;;;;AAEA;AACA;AACA;AACA;;;;;;ACrn+BA;AACA;AAAA;AACA;;;;;;;;;AACA;AACA;AAAA;AACA;AAAA;AAMA;AACA;AACA;;;;;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;AAxLA;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;ACHA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtBA;AACA;;;AAHA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAhDA;AAkDA;;;;;;;;;;;;ACnDA;AACA;;;AAHA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAhBA;AAkBA;;;;;;;;;;;;ACnBA;AACA;;;AAHA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AA/FA;AAiGA;;;;;;;;;;;;;;;;;ACpGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;AAvDA;;;;;;;;;;;;;;;;;ACAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;AA3LA;;;;;;;;;;;;;;;ACAA;AACA;;;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;;;;AAnKA;;;;;;;;;;;;;;;;;ACFA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;AAGA;AAAA;AACA;AAAA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;;;;;;AAxCA;;;;;;;;;;;;;;;;;ACAA;AACA;;;;;;;;;;;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;;;;AA/BA;;;;;;;;;;;;;;;;;ACFA;AACA;;;;;;;;;;;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;;;;AA3CA;;;;;;;;;;;;;;ACFA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAMA;AAGA;AACA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AACA;AAOA;AAqBA;AACA;AACA;AAYA;AACA;AACA;AACA;AAGA;AASA;AACA;AACA;AACA;AACA;AAKA;AAYA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAQA;AAiBA;AACA;AACA;AACA;AAIA;AAWA;AACA;AACA;AACA;AAIA;AAOA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAOA;AAKA;AACA;AACA;AAGA;AArOA;AACA;AAuOA;;;;;;AC3OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAVA;AACA;AAsBA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAIA;AAAA;AACA;AADA;AAAA;;;;;;;;;;;;;;ACnCA;AACA;AACA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AATA;AACA;AAoBA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AAKA;AAAA;AACA;AACA;AACA;AAHA;AAAA;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;;;;;;;;;;;;ACHA;AACA;AAAA;AACA;AADA;AAAA;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}